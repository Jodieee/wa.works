!function(w,_,$){"use strict";var c=/^.*(youtu\.be\/|youtube\.com\/v\/|youtube\.com\/embed\/|youtube\.com\/watch\?v=|youtube\.com\/watch\?.*\&v=)([^#\&\?]*).*/i;w.fn.backstretch=function(a,n){var s,h=arguments;return 0===w(_).scrollTop()&&_.scrollTo(0,0),this.each(function(t){var e=w(this),i=e.data("backstretch");if(i){if("string"==typeof h[0]&&"function"==typeof i[h[0]]){var r=i[h[0]].apply(i,Array.prototype.slice.call(h,1));return r===i&&(r=$),void(r!==$&&((s=s||[])[t]=r))}n=w.extend(i.options,n),i.hasOwnProperty("destroy")&&i.destroy(!0)}if(!a||a&&0===a.length){var o=e.css("background-image");o&&"none"!==o?a=[{url:e.css("backgroundImage").replace(/url\(|\)|"|'/g,"")}]:w.error("No images were supplied for Backstretch, or element must have a CSS-defined background image.")}i=new f(this,a,n||{}),e.data("backstretch",i)}),s?1===s.length?s[0]:s:this},w.backstretch=function(t,e){return w("body").backstretch(t,e).data("backstretch")},w.expr[":"].backstretch=function(t){return w(t).data("backstretch")!==$},w.fn.backstretch.defaults={duration:5e3,transition:"fade",transitionDuration:0,animateFirst:!0,alignX:.5,alignY:.5,paused:!1,start:0,preload:2,preloadSize:1,resolutionRefreshRate:2500,resolutionChangeRatioThreshold:.1};var d,l,u,i,p,g,s={wrap:{left:0,top:0,overflow:"hidden",margin:0,padding:0,height:"100%",width:"100%",zIndex:-999999},itemWrapper:{position:"absolute",display:"none",margin:0,padding:0,border:"none",width:"100%",height:"100%",zIndex:-999999},item:{position:"absolute",margin:0,padding:0,border:"none",width:"100%",height:"100%",maxWidth:"none"}},T=(d=function(t){for(var e=1;e<t.length;e++){for(var i=t[e],r=e;t[r-1]&&parseInt(t[r-1].width,10)>parseInt(i.width,10);)t[r]=t[r-1],--r;t[r]=i}return t},l=function(t,e,i){for(var r,o,a=_.devicePixelRatio||1,n=C(),s=(S(),t<e?"portrait":e<t?"landscape":"square"),h=0,c=0;c<i.length&&("string"==typeof(o=i[c])&&(o=i[c]={url:o}),o.pixelRatio&&"auto"!==o.pixelRatio&&parseFloat(o.pixelRatio)!==a||o.deviceOrientation&&o.deviceOrientation!==n||o.windowOrientation&&o.windowOrientation!==n||o.orientation&&o.orientation!==s||(h=c,r=t,"auto"===o.pixelRatio&&(t*=a),!(o.width>=r)));c++);return i[Math.min(c,h)]},u=function(t,e){if("string"==typeof t)t=t.replace(/{{(width|height)}}/g,e);else if(t instanceof Array)for(var i=0;i<t.length;i++)t[i].src?t[i].src=u(t[i].src,e):t[i]=u(t[i],e);return t},function(t,e){for(var i=t.width(),r=t.height(),o=[],a=function(t,e){return"width"===e?i:"height"===e?r:t},n=0;n<e.length;n++)if(w.isArray(e[n])){e[n]=d(e[n]);var s=l(i,r,e[n]);o.push(s)}else{"string"==typeof e[n]&&(e[n]={url:e[n]});var h=w.extend({},e[n]);h.url=u(h.url,a),o.push(h)}return o}),m=function(t){return c.test(t.url)||t.isVideo},k=(i=[],p=function(t){for(var e=0;e<i.length;e++)if(i[e].src===t.src)return i[e];return i.push(t),t},g=function(t,e,i){"function"==typeof e&&e.call(t,i)},function t(e,i,r,o,a){if(void 0!==e){w.isArray(e)||(e=[e]),arguments.length<5&&"function"==typeof arguments[arguments.length-1]&&(a=arguments[arguments.length-1]),i="function"!=typeof i&&i?i:0,r="function"==typeof r||!r||r<0?e.length:Math.min(r,e.length),o="function"!=typeof o&&o?o:1,i>=e.length&&(r=i=0),o<0&&(o=r),o=Math.min(o,r);var n=e.slice(i+o,r-o);if(e=e.slice(i,o),r=e.length)for(var s,h=0,c=function(){++h===r&&(g(e,a,!n),t(n,0,0,o,a))},d=0;d<e.length;d++)m(e[d])||((s=new Image).src=e[d].url,(s=p(s)).complete?c():w(s).on("load error",c));else g(e,a,!0)}}),h=function(t){for(var e=[],i=0;i<t.length;i++)"string"==typeof t[i]?e.push({url:t[i]}):w.isArray(t[i])?e.push(h(t[i])):e.push(y(t[i]));return e},y=function(t,e){return(t.centeredX||t.centeredY)&&(_.console&&_.console.log&&_.console.log("jquery.backstretch: `centeredX`/`centeredY` is deprecated, please use `alignX`/`alignY`"),t.centeredX&&(t.alignX=.5),t.centeredY&&(t.alignY=.5)),t.speed!==$&&(_.console&&_.console.log&&_.console.log("jquery.backstretch: `speed` is deprecated, please use `transitionDuration`"),t.transitionDuration=t.speed,t.transition="fade"),t.resolutionChangeRatioTreshold!==$&&(_.console.log("jquery.backstretch: `treshold` is a typo!"),t.resolutionChangeRatioThreshold=t.resolutionChangeRatioTreshold),t.fadeFirst!==$&&(t.animateFirst=t.fadeFirst),t.fade!==$&&(t.transitionDuration=t.fade,t.transition="fade"),t.scale&&(t.scale=x(t.scale)),r(t)},r=function(t,e){return"left"===t.alignX?t.alignX=0:"center"===t.alignX?t.alignX=.5:"right"===t.alignX?t.alignX=1:(t.alignX!==$||e)&&(t.alignX=parseFloat(t.alignX),isNaN(t.alignX)&&(t.alignX=.5)),"top"===t.alignY?t.alignY=0:"center"===t.alignY?t.alignY=.5:"bottom"===t.alignY?t.alignY=1:(t.alignX!==$||e)&&(t.alignY=parseFloat(t.alignY),isNaN(t.alignY)&&(t.alignY=.5)),t},e={cover:"cover",fit:"fit","fit-smaller":"fit-smaller",fill:"fill"};function x(t){return e.hasOwnProperty(t)?t:"cover"}var f=function(t,e,i){this.options=w.extend({},w.fn.backstretch.defaults,i||{}),this.firstShow=!0,y(this.options,!0),this.images=h(w.isArray(e)?e:[e]),this.options.paused&&(this.paused=!0),this.options.start>=this.images.length&&(this.options.start=this.images.length-1),this.options.start<0&&(this.options.start=0),this.isBody=t===document.body;var r=w(_);this.$container=w(t),this.$root=this.isBody?z?r:w(document):this.$container,this.originalImages=this.images,this.images=T(this.options.alwaysTestWindowResolution?r:this.$root,this.originalImages),k(this.images,this.options.start||0,this.options.preload||1);var o=this.$container.children(".backstretch").first();if(this.$wrap=o.length?o:w('<div class="backstretch"></div>').css(this.options.bypassCss?{}:s.wrap).appendTo(this.$container),!this.options.bypassCss){if(!this.isBody){var a=this.$container.css("position"),n=this.$container.css("zIndex");this.$container.css({position:"static"===a?"relative":a,zIndex:"auto"===n?0:n}),this.$wrap.css({zIndex:-999998})}this.$wrap.css({position:this.isBody&&z?"fixed":"absolute"})}this.index=this.options.start,this.show(this.index),r.on("resize.backstretch",w.proxy(this.resize,this)).on("orientationchange.backstretch",w.proxy(function(){this.isBody&&0===_.pageYOffset&&(_.scrollTo(0,1),this.resize())},this))};f.prototype={resize:function(){try{var t=this.options.alwaysTestWindowResolution?w(_):this.$root,e=t.width(),i=t.height(),r=e/(this._lastResizeContainerWidth||0),o=i/(this._lastResizeContainerHeight||0),a=this.options.resolutionChangeRatioThreshold||0;if((e!==this._lastResizeContainerWidth||i!==this._lastResizeContainerHeight)&&(Math.abs(r-1)>=a||isNaN(r)||Math.abs(o-1)>=a||isNaN(o))&&(this._lastResizeContainerWidth=e,this._lastResizeContainerHeight=i,this.images=T(t,this.originalImages),this.options.preload&&k(this.images,(this.index+1)%this.images.length,this.options.preload),1===this.images.length&&this._currentImage.url!==this.images[0].url)){var n=this;clearTimeout(n._selectAnotherResolutionTimeout),n._selectAnotherResolutionTimeout=setTimeout(function(){n.show(0)},this.options.resolutionRefreshRate)}var s,h,c={left:0,top:0,right:"auto",bottom:"auto"},d=this.isBody?this.$root.width():this.$root.innerWidth(),l=this.isBody?_.innerHeight?_.innerHeight:this.$root.height():this.$root.innerHeight(),u=this.$itemWrapper.data("width"),p=this.$itemWrapper.data("height"),g=u/p||1,y=this._currentImage.alignX===$?this.options.alignX:this._currentImage.alignX,f=this._currentImage.alignY===$?this.options.alignY:this._currentImage.alignY,m=x(this._currentImage.scale||this.options.scale);if("fit"===m||"fit-smaller"===m){if(h=p,d<(s=u)||l<h||"fit-smaller"===m){var v=d/l;h=g<v?(s=Math.floor(l*g),l):v<g?(s=d,Math.floor(d/g)):(s=d,l)}}else h="fill"===m?(s=d,l):(s=Math.max(l*g,d),Math.max(s/g,l));c.top=-(h-l)*f,c.left=-(s-d)*y,c.width=s,c.height=h,this.options.bypassCss||this.$wrap.css({width:d,height:l}).find(">.backstretch-item").not(".deleteable").each(function(){w(this).find("img,video,iframe").css(c)});var b=w.Event("backstretch.resize",{relatedTarget:this.$container[0]});this.$container.trigger(b,this)}catch(t){}return this},show:function(d,l){if(!(Math.abs(d)>this.images.length-1)){var u=this,p=u.$wrap.find(">.backstretch-item").addClass("deleteable"),g=u.videoWrapper,y={relatedTarget:u.$container[0]};u.$container.trigger(w.Event("backstretch.before",y),[u,d]),this.index=d;var t=u.images[d];clearTimeout(u._cycleTimeout),delete u.videoWrapper;var f=m(t);return u.$item=f?(u.videoWrapper=new v(t),u.videoWrapper.$video.css("pointer-events","none")):w("<img />"),u.$itemWrapper=w('<div class="backstretch-item">').append(u.$item),this.options.bypassCss?u.$itemWrapper.css({display:"none"}):(u.$itemWrapper.css(s.itemWrapper),u.$item.css(s.item)),u.$item.bind(f?"canplay":"load",function(t){var e=w(this).parent(),i=e.data("options");l&&(i=w.extend({},i,l));var r=this.naturalWidth||this.videoWidth||this.width,o=this.naturalHeight||this.videoHeight||this.height;e.data("width",r).data("height",o);var a=function(t){return i[t]!==$?i[t]:u.options[t]},n=a("transition"),s=a("transitionEasing"),h=a("transitionDuration"),c=function(){g&&(g.stop(),g.destroy()),p.remove(),!u.paused&&1<u.images.length&&u.cycle(),u.options.bypassCss||u.isBody||u.$container.css("background-image","none"),w(["after","show"]).each(function(){u.$container.trigger(w.Event("backstretch."+this,y),[u,d])}),f&&u.videoWrapper.play()};u.firstShow&&!u.options.animateFirst||!h||!n?(e.show(),c()):function(t){var e=t.transition||"fade";"string"==typeof e&&-1<e.indexOf("|")&&(e=e.split("|")),e instanceof Array&&(e=e[Math.round(Math.random()*(e.length-1))]);var i=t.new,r=t.old?t.old:w([]);switch(e.toString().toLowerCase()){default:case"fade":i.fadeIn({duration:t.duration,complete:t.complete,easing:t.easing||$});break;case"fadeinout":case"fade_in_out":var o=function(){i.fadeIn({duration:t.duration/2,complete:t.complete,easing:t.easing||$})};r.length?r.fadeOut({duration:t.duration/2,complete:o,easing:t.easing||$}):o();break;case"pushleft":case"push_left":case"pushright":case"push_right":case"pushup":case"push_up":case"pushdown":case"push_down":case"coverleft":case"cover_left":case"coverright":case"cover_right":case"coverup":case"cover_up":case"coverdown":case"cover_down":var a=e.match(/^(cover|push)_?(.*)$/),n="left"===a[2]?"right":"right"===a[2]?"left":"down"===a[2]?"top":"up"===a[2]?"bottom":"right",s={display:""},h={};if(s[n]="-100%",h[n]=0,i.css(s).animate(h,{duration:t.duration,complete:function(){i.css(n,""),t.complete.apply(this,arguments)},easing:t.easing||$}),"push"===a[1]&&r.length){var c={};c[n]="100%",r.animate(c,{duration:t.duration,complete:function(){r.css("display","none")},easing:t.easing||$})}}}({new:e,old:p,transition:n,duration:h,easing:s,complete:c}),u.firstShow=!1,u.resize()}),u.$itemWrapper.appendTo(u.$wrap),u.$item.attr("alt",t.alt||""),u.$itemWrapper.data("options",t),f||u.$item.attr("src",t.url),u._currentImage=t,u}},current:function(){return this.index},next:function(){var t=Array.prototype.slice.call(arguments,0);return t.unshift(this.index<this.images.length-1?this.index+1:0),this.show.apply(this,t)},prev:function(){var t=Array.prototype.slice.call(arguments,0);return t.unshift(0===this.index?this.images.length-1:this.index-1),this.show.apply(this,t)},pause:function(){return this.paused=!0,this.videoWrapper&&this.videoWrapper.pause(),this},resume:function(){return this.paused=!1,this.videoWrapper&&this.videoWrapper.play(),this.cycle(),this},cycle:function(){if(1<this.images.length){clearTimeout(this._cycleTimeout);var t=this._currentImage&&this._currentImage.duration||this.options.duration,e=m(this._currentImage),i=function(){this.$item.off(".cycle"),this.paused||this.next()};if(e){if(!this._currentImage.loop){var r=0;this.$item.on("playing.cycle",function(){var t=w(this).data("player");clearTimeout(r),r=setTimeout(function(){t.pause(),t.$video.trigger("ended")},1e3*(t.getDuration()-t.getCurrentTime()))}).on("ended.cycle",function(){clearTimeout(r)})}this.$item.on("error.cycle initerror.cycle",w.proxy(i,this))}e&&!this._currentImage.duration?this.$item.on("ended.cycle",w.proxy(i,this)):this._cycleTimeout=setTimeout(w.proxy(i,this),t)}return this},destroy:function(t){w(_).off("resize.backstretch orientationchange.backstretch"),this.videoWrapper&&this.videoWrapper.destroy(),clearTimeout(this._cycleTimeout),t||this.$wrap.remove(),this.$container.removeData("backstretch")}};var v=function(){this.init.apply(this,arguments)};v.prototype.init=function(t){var e,i=this,r=function(){i.$video=e,i.video=e[0]},o="video";if(t.url instanceof Array||!c.test(t.url)||(o="youtube"),"youtube"===(i.type=o)){v.loadYoutubeAPI(),i.ytId=t.url.match(c)[2];var a="https://www.youtube.com/embed/"+i.ytId+"?rel=0&autoplay=0&showinfo=0&controls=0&modestbranding=1&cc_load_policy=0&disablekb=1&iv_load_policy=3&loop=0&enablejsapi=1&origin="+encodeURIComponent(_.location.origin);i.__ytStartMuted=!!t.mute||t.mute===$,e=w("<iframe />").attr({src_to_load:a}).css({border:0,margin:0,padding:0}).data("player",i),t.loop&&e.on("ended.loop",function(){i.__manuallyStopped||i.play()}),i.ytReady=!1,r(),_.YT?(i._initYoutube(),e.trigger("initsuccess")):w(_).one("youtube_api_load",function(){i._initYoutube(),e.trigger("initsuccess")})}else{e=w("<video>").prop("autoplay",!1).prop("controls",!1).prop("loop",!!t.loop).prop("muted",!!t.mute||t.mute===$).prop("preload","auto").prop("poster",t.poster||"");for(var n=t.url instanceof Array?t.url:[t.url],s=0;s<n.length;s++){var h=n[s];"string"==typeof h&&(h={src:h}),w("<source>").attr("src",h.src).attr("type",h.type||null).appendTo(e)}e[0].canPlayType&&n.length?e.trigger("initsuccess"):e.trigger("initerror"),r()}},v.prototype._initYoutube=function(){var e=this,i=_.YT;e.$video.attr("src",e.$video.attr("src_to_load")).removeAttr("src_to_load");var t=!!e.$video[0].parentNode;if(!t){var r=w("<div>").css("display","none !important").appendTo(document.body);e.$video.appendTo(r)}var o=new i.Player(e.video,{events:{onReady:function(){e.__ytStartMuted&&o.mute(),t||(e.$video[0].parentNode===r[0]&&e.$video.detach(),r.remove()),e.ytReady=!0,e._updateYoutubeSize(),e.$video.trigger("canplay")},onStateChange:function(t){switch(t.data){case i.PlayerState.PLAYING:e.$video.trigger("playing");break;case i.PlayerState.ENDED:e.$video.trigger("ended");break;case i.PlayerState.PAUSED:e.$video.trigger("pause");break;case i.PlayerState.BUFFERING:e.$video.trigger("waiting");break;case i.PlayerState.CUED:e.$video.trigger("canplay")}},onPlaybackQualityChange:function(){e._updateYoutubeSize(),e.$video.trigger("resize")},onError:function(t){e.hasError=!0,e.$video.trigger({type:"error",error:t})}}});return e.ytPlayer=o,e},v.prototype._updateYoutubeSize=function(){var t=this;switch(t.ytPlayer.getPlaybackQuality()||"medium"){case"small":t.video.videoWidth=426,t.video.videoHeight=240;break;case"medium":t.video.videoWidth=640,t.video.videoHeight=360;break;default:case"large":t.video.videoWidth=854,t.video.videoHeight=480;break;case"hd720":t.video.videoWidth=1280,t.video.videoHeight=720;break;case"hd1080":t.video.videoWidth=1920,t.video.videoHeight=1080;break;case"highres":t.video.videoWidth=2560,t.video.videoHeight=1440}return t},v.prototype.play=function(){var t=this;return t.__manuallyStopped=!1,"youtube"===t.type?t.ytReady&&(t.$video.trigger("play"),t.ytPlayer.playVideo()):t.video.play(),t},v.prototype.pause=function(){var t=this;return t.__manuallyStopped=!1,"youtube"===t.type?t.ytReady&&t.ytPlayer.pauseVideo():t.video.pause(),t},v.prototype.stop=function(){var t=this;return t.__manuallyStopped=!0,"youtube"===t.type?t.ytReady&&(t.ytPlayer.pauseVideo(),t.ytPlayer.seekTo(0)):(t.video.pause(),t.video.currentTime=0),t},v.prototype.destroy=function(){return this.ytPlayer&&this.ytPlayer.destroy(),this.$video.remove(),this},v.prototype.getCurrentTime=function(t){return"youtube"!==this.type?this.video.currentTime:this.ytReady?this.ytPlayer.getCurrentTime():0},v.prototype.setCurrentTime=function(t){var e=this;return"youtube"===e.type?e.ytReady&&e.ytPlayer.seekTo(t,!0):e.video.currentTime=t,e},v.prototype.getDuration=function(){return"youtube"!==this.type?this.video.duration:this.ytReady?this.ytPlayer.getDuration():0},v.loadYoutubeAPI=function(){if(!_.YT){w("script[src*=www\\.youtube\\.com\\/iframe_api]").length||w('<script type="text/javascript" src="https://www.youtube.com/iframe_api">').appendTo("body");var t=setInterval(function(){_.YT&&_.YT.loaded&&(w(_).trigger("youtube_api_load"),clearTimeout(t))},50)}};var t,o,a,n,b,W,R,I,Y,P,C=function(){if("matchMedia"in _){if(_.matchMedia("(orientation: portrait)").matches)return"portrait";if(_.matchMedia("(orientation: landscape)").matches)return"landscape"}return screen.height>screen.width?"portrait":"landscape"},S=function(){return _.innerHeight>_.innerWidth?"portrait":_.innerWidth>_.innerHeight?"landscape":"square"},z=(t=navigator.userAgent,o=navigator.platform,a=t.match(/AppleWebKit\/([0-9]+)/),n=!!a&&a[1],b=t.match(/Fennec\/([0-9]+)/),W=!!b&&b[1],R=t.match(/Opera Mobi\/([0-9]+)/),I=!!R&&R[1],Y=t.match(/MSIE ([0-9]+)/),P=!!Y&&Y[1],!((-1<o.indexOf("iPhone")||-1<o.indexOf("iPad")||-1<o.indexOf("iPod"))&&n&&n<534||_.operamini&&"[object OperaMini]"==={}.toString.call(_.operamini)||R&&I<7458||-1<t.indexOf("Android")&&n&&n<533||W&&W<6||"palmGetResource"in _&&n&&n<534||-1<t.indexOf("MeeGo")&&-1<t.indexOf("NokiaBrowser/8.5.0")||P&&P<=6))}(jQuery,window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5iYWNrc3RyZXRjaC5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwidW5kZWZpbmVkIiwiWU9VVFVCRV9SRUdFWFAiLCJmbiIsImJhY2tzdHJldGNoIiwiaW1hZ2VzIiwib3B0aW9ucyIsInJldHVyblZhbHVlcyIsImFyZ3MiLCJhcmd1bWVudHMiLCJzY3JvbGxUb3AiLCJzY3JvbGxUbyIsInRoaXMiLCJlYWNoIiwiZWFjaEluZGV4IiwiJHRoaXMiLCJvYmoiLCJkYXRhIiwicmV0dXJuVmFsdWUiLCJhcHBseSIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiZXh0ZW5kIiwiaGFzT3duUHJvcGVydHkiLCJkZXN0cm95IiwibGVuZ3RoIiwiY3NzQmFja2dyb3VuZEltYWdlIiwiY3NzIiwidXJsIiwicmVwbGFjZSIsImVycm9yIiwiQmFja3N0cmV0Y2giLCJleHByIiwiZWxlbSIsImRlZmF1bHRzIiwiZHVyYXRpb24iLCJ0cmFuc2l0aW9uIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiYW5pbWF0ZUZpcnN0IiwiYWxpZ25YIiwiYWxpZ25ZIiwicGF1c2VkIiwic3RhcnQiLCJwcmVsb2FkIiwicHJlbG9hZFNpemUiLCJyZXNvbHV0aW9uUmVmcmVzaFJhdGUiLCJyZXNvbHV0aW9uQ2hhbmdlUmF0aW9UaHJlc2hvbGQiLCJ3aWR0aEluc2VydFNvcnQiLCJzZWxlY3RCZXN0IiwicmVwbGFjZVRhZ3NJblVybCIsImNhY2hlIiwiY2FjaGluZyIsImV4ZWMiLCJzdHlsZXMiLCJ3cmFwIiwibGVmdCIsInRvcCIsIm92ZXJmbG93IiwibWFyZ2luIiwicGFkZGluZyIsImhlaWdodCIsIndpZHRoIiwiekluZGV4IiwiaXRlbVdyYXBwZXIiLCJwb3NpdGlvbiIsImRpc3BsYXkiLCJib3JkZXIiLCJpdGVtIiwibWF4V2lkdGgiLCJvcHRpbWFsU2l6ZUltYWdlcyIsImFyciIsImkiLCJ0bXAiLCJqIiwicGFyc2VJbnQiLCJjb250YWluZXJXaWR0aCIsImNvbnRhaW5lckhlaWdodCIsImltYWdlU2l6ZXMiLCJ0ZXN0V2lkdGgiLCJpbWFnZSIsImRldmljZVBpeGVsUmF0aW8iLCJkZXZpY2VPcmllbnRhdGlvbiIsImdldERldmljZU9yaWVudGF0aW9uIiwid3JhcHBlck9yaWVudGF0aW9uIiwiZ2V0V2luZG93T3JpZW50YXRpb24iLCJsYXN0QWxsb3dlZEltYWdlIiwicGl4ZWxSYXRpbyIsInBhcnNlRmxvYXQiLCJ3aW5kb3dPcmllbnRhdGlvbiIsIm9yaWVudGF0aW9uIiwiTWF0aCIsIm1pbiIsInRlbXBsYXRlUmVwbGFjZXIiLCJzcmMiLCIkY29udGFpbmVyIiwiY2hvc2VuSW1hZ2VzIiwibWF0Y2giLCJrZXkiLCJpc0FycmF5IiwiY2hvc2VuIiwicHVzaCIsImlzVmlkZW9Tb3VyY2UiLCJzb3VyY2UiLCJ0ZXN0IiwiaXNWaWRlbyIsInNvdXJjZXMiLCJjYWxsYmFjayIsImxhc3QiLCJzdGFydEF0IiwiY291bnQiLCJiYXRjaFNpemUiLCJuZXh0IiwiY291bnRMb2FkZWQiLCJsb2FkZWQiLCJJbWFnZSIsImNvbXBsZXRlIiwib24iLCJwcm9jZXNzSW1hZ2VzQXJyYXkiLCJwcm9jZXNzZWQiLCJwcm9jZXNzT3B0aW9ucyIsInJlcXVpcmVkIiwiY2VudGVyZWRYIiwiY2VudGVyZWRZIiwiY29uc29sZSIsImxvZyIsInNwZWVkIiwicmVzb2x1dGlvbkNoYW5nZVJhdGlvVHJlc2hvbGQiLCJmYWRlRmlyc3QiLCJmYWRlIiwic2NhbGUiLCJ2YWxpZFNjYWxlIiwicHJvY2Vzc0FsaWduT3B0aW9ucyIsImlzTmFOIiwiU1VQUE9SVEVEX1NDQUxFX09QVElPTlMiLCJjb3ZlciIsImZpdCIsImZpdC1zbWFsbGVyIiwiZmlsbCIsImNvbnRhaW5lciIsImZpcnN0U2hvdyIsImlzQm9keSIsImRvY3VtZW50IiwiYm9keSIsIiR3aW5kb3ciLCIkcm9vdCIsInN1cHBvcnRzRml4ZWRQb3NpdGlvbiIsIm9yaWdpbmFsSW1hZ2VzIiwiYWx3YXlzVGVzdFdpbmRvd1Jlc29sdXRpb24iLCIkZXhpc3RpbmciLCJjaGlsZHJlbiIsImZpcnN0IiwiJHdyYXAiLCJieXBhc3NDc3MiLCJhcHBlbmRUbyIsImluZGV4Iiwic2hvdyIsInByb3h5IiwicmVzaXplIiwicGFnZVlPZmZzZXQiLCIkcmVzVGVzdCIsIm5ld0NvbnRhaW5lcldpZHRoIiwibmV3Q29udGFpbmVySGVpZ2h0IiwiY2hhbmdlUmF0aW9XIiwiX2xhc3RSZXNpemVDb250YWluZXJXaWR0aCIsImNoYW5nZVJhdGlvSCIsIl9sYXN0UmVzaXplQ29udGFpbmVySGVpZ2h0IiwiYWJzIiwiX2N1cnJlbnRJbWFnZSIsInRoYXQiLCJjbGVhclRpbWVvdXQiLCJfc2VsZWN0QW5vdGhlclJlc29sdXRpb25UaW1lb3V0Iiwic2V0VGltZW91dCIsImJnQ1NTIiwicmlnaHQiLCJib3R0b20iLCJib3hXaWR0aCIsImlubmVyV2lkdGgiLCJib3hIZWlnaHQiLCJpbm5lckhlaWdodCIsIm5hdHVyYWxXaWR0aCIsIiRpdGVtV3JhcHBlciIsIm5hdHVyYWxIZWlnaHQiLCJyYXRpbyIsImJveFJhdGlvIiwiZmxvb3IiLCJtYXgiLCJmaW5kIiwibm90IiwiZXZ0IiwiRXZlbnQiLCJyZWxhdGVkVGFyZ2V0IiwidHJpZ2dlciIsImVyciIsIm5ld0luZGV4Iiwib3ZlcnJpZGVPcHRpb25zIiwiJG9sZEl0ZW1XcmFwcGVyIiwiYWRkQ2xhc3MiLCJvbGRWaWRlb1dyYXBwZXIiLCJ2aWRlb1dyYXBwZXIiLCJldnRPcHRpb25zIiwic2VsZWN0ZWRJbWFnZSIsIl9jeWNsZVRpbWVvdXQiLCIkaXRlbSIsIlZpZGVvV3JhcHBlciIsIiR2aWRlbyIsImFwcGVuZCIsImJpbmQiLCJlIiwiJHdyYXBwZXIiLCJwYXJlbnQiLCJpbWdXaWR0aCIsInZpZGVvV2lkdGgiLCJpbWdIZWlnaHQiLCJ2aWRlb0hlaWdodCIsImdldE9wdGlvbiIsIm9wdCIsInRyYW5zaXRpb25FYXNpbmciLCJicmluZ0luTmV4dEltYWdlIiwic3RvcCIsInJlbW92ZSIsImN5Y2xlIiwicGxheSIsImluZGV4T2YiLCJzcGxpdCIsInJvdW5kIiwicmFuZG9tIiwiJG5ldyIsIiRvbGQiLCJ0b1N0cmluZyIsInRvTG93ZXJDYXNlIiwiZmFkZUluIiwiZWFzaW5nIiwiZmFkZUluTmV3IiwiZmFkZU91dCIsInRyYW5zaXRpb25QYXJ0cyIsImFuaW1Qcm9wIiwibmV3Q3NzU3RhcnQiLCJuZXdDc3NBbmltIiwiYW5pbWF0ZSIsIm9sZENzc0FuaW0iLCJwZXJmb3JtVHJhbnNpdGlvbiIsIm5ldyIsIm9sZCIsImF0dHIiLCJhbHQiLCJjdXJyZW50IiwidW5zaGlmdCIsInByZXYiLCJwYXVzZSIsInJlc3VtZSIsImNhbGxOZXh0Iiwib2ZmIiwibG9vcCIsImxhc3RGcmFtZVRpbWVvdXQiLCJwbGF5ZXIiLCJnZXREdXJhdGlvbiIsImdldEN1cnJlbnRUaW1lIiwicHJlc2VydmVCYWNrZ3JvdW5kIiwicmVtb3ZlRGF0YSIsImluaXQiLCJzZXRWaWRlb0VsZW1lbnQiLCJ2aWRlbyIsInZpZGVvVHlwZSIsInR5cGUiLCJsb2FkWW91dHViZUFQSSIsInl0SWQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJsb2NhdGlvbiIsIm9yaWdpbiIsIl9feXRTdGFydE11dGVkIiwibXV0ZSIsInNyY190b19sb2FkIiwiX19tYW51YWxseVN0b3BwZWQiLCJ5dFJlYWR5IiwiX2luaXRZb3V0dWJlIiwib25lIiwicHJvcCIsInBvc3RlciIsInNvdXJjZUl0ZW0iLCJjYW5QbGF5VHlwZSIsIllUIiwicmVtb3ZlQXR0ciIsImhhc1BhcmVudCIsInBhcmVudE5vZGUiLCIkdG1wUGFyZW50IiwiUGxheWVyIiwiZXZlbnRzIiwib25SZWFkeSIsImRldGFjaCIsIl91cGRhdGVZb3V0dWJlU2l6ZSIsIm9uU3RhdGVDaGFuZ2UiLCJldmVudCIsIlBsYXllclN0YXRlIiwiUExBWUlORyIsIkVOREVEIiwiUEFVU0VEIiwiQlVGRkVSSU5HIiwiQ1VFRCIsIm9uUGxheWJhY2tRdWFsaXR5Q2hhbmdlIiwib25FcnJvciIsImhhc0Vycm9yIiwieXRQbGF5ZXIiLCJnZXRQbGF5YmFja1F1YWxpdHkiLCJwbGF5VmlkZW8iLCJwYXVzZVZpZGVvIiwic2Vla1RvIiwiY3VycmVudFRpbWUiLCJzZWNvbmRzIiwic2V0Q3VycmVudFRpbWUiLCJ5dEFQSUxvYWRJbnQiLCJzZXRJbnRlcnZhbCIsInVhIiwicGxhdGZvcm0iLCJ3a21hdGNoIiwid2t2ZXJzaW9uIiwiZmZtYXRjaCIsImZmdmVyc2lvbiIsIm9wZXJhbW1vYmlsZW1hdGNoIiwib212ZXJzaW9uIiwiaWVtYXRjaCIsImlldmVyc2lvbiIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwic2NyZWVuIiwibmF2aWdhdG9yIiwidXNlckFnZW50Iiwib3BlcmFtaW5pIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FRQSxTQUFBQSxFQUFBQyxFQUFBQyxHQUNBLGFBR0EsSUFBQUMsRUFBQSw2SEFLQUgsRUFBQUksR0FBQUMsWUFBQSxTQUFBQyxFQUFBQyxHQUNBLElBVUFDLEVBVkFDLEVBQUFDLFVBMkRBLE9BckRBLElBQUFWLEVBQUFDLEdBQUFVLGFBQ0FWLEVBQUFXLFNBQUEsRUFBQSxHQUtBQyxLQUFBQyxLQUFBLFNBQUFDLEdBQ0EsSUFBQUMsRUFBQWhCLEVBQUFhLE1BQ0FJLEVBQUFELEVBQUFFLEtBQUEsZUFHQSxHQUFBRCxFQUFBLENBR0EsR0FBQSxpQkFBQVIsRUFBQSxJQUNBLG1CQUFBUSxFQUFBUixFQUFBLElBQUEsQ0FHQSxJQUFBVSxFQUFBRixFQUFBUixFQUFBLElBQUFXLE1BQUFILEVBQUFJLE1BQUFDLFVBQUFDLE1BQUFDLEtBQUFmLEVBQUEsSUFTQSxPQVJBVSxJQUFBRixJQUNBRSxFQUFBakIsUUFFQWlCLElBQUFqQixLQUNBTSxFQUFBQSxHQUFBLElBQ0FPLEdBQUFJLElBT0FaLEVBQUFQLEVBQUF5QixPQUFBUixFQUFBVixRQUFBQSxHQUdBVSxFQUFBUyxlQUFBLFlBQ0FULEVBQUFVLFNBQUEsR0FLQSxJQUFBckIsR0FBQUEsR0FBQSxJQUFBQSxFQUFBc0IsT0FBQSxDQUNBLElBQUFDLEVB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Q0FzSyxFQUFBYSxVQUFBQyxVQUNBYixFQUFBWSxVQUFBWixTQUVBQyxFQUFBRixFQUFBdk4sTUFBQSx5QkFDQTBOLElBQUFELEdBQUFBLEVBQUEsR0FDQUUsRUFBQUosRUFBQXZOLE1BQUEsb0JBQ0E0TixJQUFBRCxHQUFBQSxFQUFBLEdBQ0FFLEVBQUFOLEVBQUF2TixNQUFBLHdCQUNBOE4sSUFBQUQsR0FBQUEsRUFBQSxHQUNBRSxFQUFBUixFQUFBdk4sTUFBQSxpQkFDQWdPLElBQUFELEdBQUFBLEVBQUEsT0FJQSxFQUFBUCxFQUFBMUYsUUFBQSxZQUFBLEVBQUEwRixFQUFBMUYsUUFBQSxVQUFBLEVBQUEwRixFQUFBMUYsUUFBQSxVQUFBNEYsR0FBQUEsRUFBQSxLQUdBNVQsRUFBQXdVLFdBQUEsdUJBQUEsR0FBQWxHLFNBQUEvTSxLQUFBdkIsRUFBQXdVLFlBQ0FULEdBQUFDLEVBQUEsT0FHQSxFQUFBUCxFQUFBekYsUUFBQSxZQUFBNEYsR0FBQUEsRUFBQSxLQUdBRSxHQUFBQSxFQUFBLEdBR0Esb0JBQUE5VCxHQUFBNFQsR0FBQUEsRUFBQSxNQUdBLEVBQUFILEVBQUF6RixRQUFBLFdBQUEsRUFBQXlGLEVBQUF6RixRQUFBLHVCQUdBa0csR0FBQUEsR0FBQSxJQTNoREEsQ0EraERBTyxPQUFBelUiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQmFja3N0cmV0Y2hcbiAqIGh0dHA6Ly9zcm9iYmluLmNvbS9qcXVlcnktcGx1Z2lucy9iYWNrc3RyZXRjaC9cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMgU2NvdHQgUm9iYmluXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4gKi9cblxuOyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8qKiBAY29uc3QgKi9cbiAgdmFyIFlPVVRVQkVfUkVHRVhQID0gL14uKih5b3V0dVxcLmJlXFwvfHlvdXR1YmVcXC5jb21cXC92XFwvfHlvdXR1YmVcXC5jb21cXC9lbWJlZFxcL3x5b3V0dWJlXFwuY29tXFwvd2F0Y2hcXD92PXx5b3V0dWJlXFwuY29tXFwvd2F0Y2hcXD8uKlxcJnY9KShbXiNcXCZcXD9dKikuKi9pO1xuICBcbiAgLyogUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmFja3N0cmV0Y2ggPSBmdW5jdGlvbiAoaW1hZ2VzLCBvcHRpb25zKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cbiAgICAvKlxuICAgICAqIFNjcm9sbCB0aGUgcGFnZSBvbmUgcGl4ZWwgdG8gZ2V0IHRoZSByaWdodCB3aW5kb3cgaGVpZ2h0IG9uIGlPU1xuICAgICAqIFByZXR0eSBoYXJtbGVzcyBmb3IgZXZlcnlvbmUgZWxzZVxuICAgICovXG4gICAgaWYgKCQod2luZG93KS5zY3JvbGxUb3AoKSA9PT0gMCApIHtcbiAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcbiAgICB9XG5cbiAgICB2YXIgcmV0dXJuVmFsdWVzO1xuICAgIFxuICAgIHRoaXMuZWFjaChmdW5jdGlvbiAoZWFjaEluZGV4KSB7XG4gICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG4gICAgICAgICwgb2JqID0gJHRoaXMuZGF0YSgnYmFja3N0cmV0Y2gnKTtcblxuICAgICAgLy8gRG8gd2UgYWxyZWFkeSBoYXZlIGFuIGluc3RhbmNlIGF0dGFjaGVkIHRvIHRoaXMgZWxlbWVudD9cbiAgICAgIGlmIChvYmopIHtcblxuICAgICAgICAvLyBJcyB0aGlzIGEgbWV0aG9kIHRoZXkncmUgdHJ5aW5nIHRvIGV4ZWN1dGU/XG4gICAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgIHR5cGVvZiBvYmpbYXJnc1swXV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgLy8gQ2FsbCB0aGUgbWV0aG9kXG4gICAgICAgICAgdmFyIHJldHVyblZhbHVlID0gb2JqW2FyZ3NbMF1dLmFwcGx5KG9iaiwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJncywgMSkpO1xuICAgICAgICAgIGlmIChyZXR1cm5WYWx1ZSA9PT0gb2JqKSB7IC8vIElmIGEgbWV0aG9kIGlzIGNoYWluaW5nXG4gICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHJldHVyblZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVyblZhbHVlcyA9IHJldHVyblZhbHVlcyB8fCBbXTtcbiAgICAgICAgICAgIHJldHVyblZhbHVlc1tlYWNoSW5kZXhdID0gcmV0dXJuVmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIHJldHVybjsgLy8gTm90aGluZyBmdXJ0aGVyIHRvIGRvXG4gICAgICAgIH1cblxuICAgICAgICAvLyBNZXJnZSB0aGUgb2xkIG9wdGlvbnMgd2l0aCB0aGUgbmV3XG4gICAgICAgIG9wdGlvbnMgPSAkLmV4dGVuZChvYmoub3B0aW9ucywgb3B0aW9ucyk7XG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBvbGQgaW5zdGFuY2VcbiAgICAgICAgaWYgKCBvYmouaGFzT3duUHJvcGVydHkoJ2Rlc3Ryb3knKSApIHtcbiAgICAgICAgICBvYmouZGVzdHJveSh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBXZSBuZWVkIGF0IGxlYXN0IG9uZSBpbWFnZVxuICAgICAgaWYgKCFpbWFnZXMgfHwgKGltYWdlcyAmJiBpbWFnZXMubGVuZ3RoID09PSAwKSkge1xuICAgICAgICB2YXIgY3NzQmFja2dyb3VuZEltYWdlID0gJHRoaXMuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJyk7XG4gICAgICAgIGlmIChjc3NCYWNrZ3JvdW5kSW1hZ2UgJiYgY3NzQmFja2dyb3VuZEltYWdlICE9PSAnbm9uZScpIHtcbiAgICAgICAgICBpbWFnZXMgPSBbIHsgdXJsOiAkdGhpcy5jc3MoJ2JhY2tncm91bmRJbWFnZScpLnJlcGxhY2UoL3VybFxcKHxcXCl8XCJ8Jy9nLFwiXCIpIH0gXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAkLmVycm9yKCdObyBpbWFnZXMgd2VyZSBzdXBwbGllZCBmb3IgQmFja3N0cmV0Y2gsIG9yIGVsZW1lbnQgbXVzdCBoYXZlIGEgQ1NTLWRlZmluZWQgYmFja2dyb3VuZCBpbWFnZS4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBvYmogPSBuZXcgQmFja3N0cmV0Y2godGhpcywgaW1hZ2VzLCBvcHRpb25zIHx8IHt9KTtcbiAgICAgICR0aGlzLmRhdGEoJ2JhY2tzdHJldGNoJywgb2JqKTtcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gcmV0dXJuVmFsdWVzID8gcmV0dXJuVmFsdWVzLmxlbmd0aCA9PT0gMSA/IHJldHVyblZhbHVlc1swXSA6IHJldHVyblZhbHVlcyA6IHRoaXM7XG4gIH07XG5cbiAgLy8gSWYgbm8gZWxlbWVudCBpcyBzdXBwbGllZCwgd2UnbGwgYXR0YWNoIHRvIGJvZHlcbiAgJC5iYWNrc3RyZXRjaCA9IGZ1bmN0aW9uIChpbWFnZXMsIG9wdGlvbnMpIHtcbiAgICAvLyBSZXR1cm4gdGhlIGluc3RhbmNlXG4gICAgcmV0dXJuICQoJ2JvZHknKVxuICAgICAgICAgICAgLmJhY2tzdHJldGNoKGltYWdlcywgb3B0aW9ucylcbiAgICAgICAgICAgIC5kYXRhKCdiYWNrc3RyZXRjaCcpO1xuICB9O1xuXG4gIC8vIEN1c3RvbSBzZWxlY3RvclxuICAkLmV4cHJbJzonXS5iYWNrc3RyZXRjaCA9IGZ1bmN0aW9uKGVsZW0pIHtcbiAgICByZXR1cm4gJChlbGVtKS5kYXRhKCdiYWNrc3RyZXRjaCcpICE9PSB1bmRlZmluZWQ7XG4gIH07XG5cbiAgLyogREVGQVVMVFNcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmFja3N0cmV0Y2guZGVmYXVsdHMgPSB7XG4gICAgZHVyYXRpb246IDUwMDAgICAgICAgICAgICAgICAgLy8gQW1vdW50IG9mIHRpbWUgaW4gYmV0d2VlbiBzbGlkZXMgKGlmIHNsaWRlc2hvdylcbiAgICAsIHRyYW5zaXRpb246ICdmYWRlJyAgICAgICAgICAvLyBUeXBlIG9mIHRyYW5zaXRpb24gYmV0d2VlbiBzbGlkZXNcbiAgICAsIHRyYW5zaXRpb25EdXJhdGlvbjogMCAgICAgICAvLyBEdXJhdGlvbiBvZiB0cmFuc2l0aW9uIGJldHdlZW4gc2xpZGVzXG4gICAgLCBhbmltYXRlRmlyc3Q6IHRydWUgICAgICAgICAgLy8gQW5pbWF0ZSB0aGUgdHJhbnNpdGlvbiBvZiBmaXJzdCBpbWFnZSBvZiBzbGlkZXNob3cgaW4/XG4gICAgLCBhbGlnblg6IDAuNSAgICAgICAgICAgICAgICAgLy8gVGhlIHgtYWxpZ25tZW50IGZvciB0aGUgaW1hZ2UsIGNhbiBiZSAnbGVmdCd8J2NlbnRlcid8J3JpZ2h0JyBvciBhbnkgbnVtYmVyIGJldHdlZW4gMC4wIGFuZCAxLjBcbiAgICAsIGFsaWduWTogMC41ICAgICAgICAgICAgICAgICAvLyBUaGUgeS1hbGlnbm1lbnQgZm9yIHRoZSBpbWFnZSwgY2FuIGJlICd0b3AnfCdjZW50ZXInfCdib3R0b20nIG9yIGFueSBudW1iZXIgYmV0d2VlbiAwLjAgYW5kIDEuMFxuICAgICwgcGF1c2VkOiBmYWxzZSAgICAgICAgICAgICAgIC8vIFdoZXRoZXIgdGhlIGltYWdlcyBzaG91bGQgc2xpZGUgYWZ0ZXIgZ2l2ZW4gZHVyYXRpb25cbiAgICAsIHN0YXJ0OiAwICAgICAgICAgICAgICAgICAgICAvLyBJbmRleCBvZiB0aGUgZmlyc3QgaW1hZ2UgdG8gc2hvd1xuICAgICwgcHJlbG9hZDogMiAgICAgICAgICAgICAgICAgIC8vIEhvdyBtYW55IGltYWdlcyBwcmVsb2FkIGF0IGEgdGltZT9cbiAgICAsIHByZWxvYWRTaXplOiAxICAgICAgICAgICAgICAvLyBIb3cgbWFueSBpbWFnZXMgY2FuIHdlIHByZWxvYWQgaW4gcGFyYWxsZWw/XG4gICAgLCByZXNvbHV0aW9uUmVmcmVzaFJhdGU6IDI1MDAgLy8gSG93IGxvbmcgdG8gd2FpdCBiZWZvcmUgc3dpdGNoaW5nIHJlc29sdXRpb24/XG4gICAgLCByZXNvbHV0aW9uQ2hhbmdlUmF0aW9UaHJlc2hvbGQ6IDAuMSAvLyBIb3cgbXVjaCBhIGNoYW5nZSBzaG91bGQgaXQgYmUgYmVmb3JlIHN3aXRjaGluZyByZXNvbHV0aW9uP1xuICB9O1xuXG4gIC8qIFNUWUxFU1xuICAgKlxuICAgKiBCYWtlZC1pbiBzdHlsZXMgdGhhdCB3ZSdsbCBhcHBseSB0byBvdXIgZWxlbWVudHMuXG4gICAqIEluIGFuIGVmZm9ydCB0byBrZWVwIHRoZSBwbHVnaW4gc2ltcGxlLCB0aGVzZSBhcmUgbm90IGV4cG9zZWQgYXMgb3B0aW9ucy5cbiAgICogVGhhdCBzYWlkLCBhbnlvbmUgY2FuIG92ZXJyaWRlIHRoZXNlIGluIHRoZWlyIG93biBzdHlsZXNoZWV0LlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gIHZhciBzdHlsZXMgPSB7XG4gICAgd3JhcDoge1xuICAgICAgbGVmdDogMFxuICAgICAgLCB0b3A6IDBcbiAgICAgICwgb3ZlcmZsb3c6ICdoaWRkZW4nXG4gICAgICAsIG1hcmdpbjogMFxuICAgICAgLCBwYWRkaW5nOiAwXG4gICAgICAsIGhlaWdodDogJzEwMCUnXG4gICAgICAsIHdpZHRoOiAnMTAwJSdcbiAgICAgICwgekluZGV4OiAtOTk5OTk5XG4gICAgfVxuICAgICwgaXRlbVdyYXBwZXI6IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnXG4gICAgICAsIGRpc3BsYXk6ICdub25lJ1xuICAgICAgLCBtYXJnaW46IDBcbiAgICAgICwgcGFkZGluZzogMFxuICAgICAgLCBib3JkZXI6ICdub25lJ1xuICAgICAgLCB3aWR0aDogJzEwMCUnXG4gICAgICAsIGhlaWdodDogJzEwMCUnXG4gICAgICAsIHpJbmRleDogLTk5OTk5OVxuICAgIH1cbiAgICAsIGl0ZW06IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnXG4gICAgICAsIG1hcmdpbjogMFxuICAgICAgLCBwYWRkaW5nOiAwXG4gICAgICAsIGJvcmRlcjogJ25vbmUnXG4gICAgICAsIHdpZHRoOiAnMTAwJSdcbiAgICAgICwgaGVpZ2h0OiAnMTAwJSdcbiAgICAgICwgbWF4V2lkdGg6ICdub25lJ1xuICAgIH1cbiAgfTtcblxuICAvKiBHaXZlbiBhbiBhcnJheSBvZiBkaWZmZXJlbnQgb3B0aW9ucyBmb3IgYW4gaW1hZ2UsXG4gICAqIGNob29zZSB0aGUgb3B0aW1hbCBpbWFnZSBmb3IgdGhlIGNvbnRhaW5lciBzaXplLlxuICAgKlxuICAgKiBHaXZlbiBhbiBpbWFnZSB0ZW1wbGF0ZSAoYSBzdHJpbmcgd2l0aCB7eyB3aWR0aCB9fSBhbmQvb3JcbiAgICoge3toZWlnaHR9fSBpbnNpZGUpIGFuZCBhIGNvbnRhaW5lciBvYmplY3QsIHJldHVybnMgdGhlXG4gICAqIGltYWdlIHVybCB3aXRoIHRoZSBleGFjdCB2YWx1ZXMgZm9yIHRoZSBzaXplIG9mIHRoYXRcbiAgICogY29udGFpbmVyLlxuICAgKlxuICAgKiBSZXR1cm5zIGFuIGFycmF5IG9mIHVybHMgb3B0aW1pemVkIGZvciB0aGUgc3BlY2lmaWVkIHJlc29sdXRpb24uXG4gICAqXG4gICAqL1xuICB2YXIgb3B0aW1hbFNpemVJbWFnZXMgPSAoZnVuY3Rpb24gKCkge1xuXG4gICAgLyogU29ydHMgdGhlIGFycmF5IG9mIGltYWdlIHNpemVzIGJhc2VkIG9uIHdpZHRoICovXG4gICAgdmFyIHdpZHRoSW5zZXJ0U29ydCA9IGZ1bmN0aW9uIChhcnIpIHtcbiAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB0bXAgPSBhcnJbaV0sXG4gICAgICAgICAgICBqID0gaTtcbiAgICAgICAgd2hpbGUgKGFycltqIC0gMV0gJiYgcGFyc2VJbnQoYXJyW2ogLSAxXS53aWR0aCwgMTApID4gcGFyc2VJbnQodG1wLndpZHRoLCAxMCkpIHtcbiAgICAgICAgICBhcnJbal0gPSBhcnJbaiAtIDFdO1xuICAgICAgICAgIC0tajtcbiAgICAgICAgfVxuICAgICAgICBhcnJbal0gPSB0bXA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhcnI7XG4gICAgfTtcblxuICAgIC8qIEdpdmVuIGFuIGFycmF5IG9mIHZhcmlvdXMgc2l6ZXMgb2YgdGhlIHNhbWUgaW1hZ2UgYW5kIGEgY29udGFpbmVyIHdpZHRoLFxuICAgICAqIHJldHVybiB0aGUgYmVzdCBpbWFnZS5cbiAgICAgKi9cbiAgICB2YXIgc2VsZWN0QmVzdCA9IGZ1bmN0aW9uIChjb250YWluZXJXaWR0aCwgY29udGFpbmVySGVpZ2h0LCBpbWFnZVNpemVzKSB7XG5cbiAgICAgIHZhciBkZXZpY2VQaXhlbFJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgICAgIHZhciBkZXZpY2VPcmllbnRhdGlvbiA9IGdldERldmljZU9yaWVudGF0aW9uKCk7XG4gICAgICB2YXIgd2luZG93T3JpZW50YXRpb24gPSBnZXRXaW5kb3dPcmllbnRhdGlvbigpO1xuICAgICAgdmFyIHdyYXBwZXJPcmllbnRhdGlvbiA9IChjb250YWluZXJIZWlnaHQgPiBjb250YWluZXJXaWR0aCkgP1xuICAgICAgICAncG9ydHJhaXQnIDpcbiAgICAgICAgKGNvbnRhaW5lcldpZHRoID4gY29udGFpbmVySGVpZ2h0ID8gJ2xhbmRzY2FwZScgOiAnc3F1YXJlJyk7XG5cbiAgICAgIHZhciBsYXN0QWxsb3dlZEltYWdlID0gMDtcbiAgICAgIHZhciB0ZXN0V2lkdGg7XG5cbiAgICAgIGZvciAodmFyIGogPSAwLCBpbWFnZTsgaiA8IGltYWdlU2l6ZXMubGVuZ3RoOyBqKyspIHtcblxuICAgICAgICAgIGltYWdlID0gaW1hZ2VTaXplc1tqXTtcblxuICAgICAgICAgIC8vIEluIGNhc2UgYSBuZXcgaW1hZ2Ugd2FzIHB1c2hlZCBpbiwgcHJvY2VzcyBpdDpcbiAgICAgICAgICBpZiAodHlwZW9mIGltYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBpbWFnZSA9IGltYWdlU2l6ZXNbal0gPSB7IHVybDogaW1hZ2UgfTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaW1hZ2UucGl4ZWxSYXRpbyAmJiBpbWFnZS5waXhlbFJhdGlvICE9PSAnYXV0bycgJiYgcGFyc2VGbG9hdChpbWFnZS5waXhlbFJhdGlvKSAhPT0gZGV2aWNlUGl4ZWxSYXRpbykge1xuICAgICAgICAgICAgICAvLyBXZSBkaXNhbGxvd2VkIGNob29zaW5nIHRoaXMgaW1hZ2UgZm9yIGN1cnJlbnQgZGV2aWNlIHBpeGVsIHJhdGlvLFxuICAgICAgICAgICAgICAvLyBTbyBza2lwIHRoaXMgb25lLlxuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaW1hZ2UuZGV2aWNlT3JpZW50YXRpb24gJiYgaW1hZ2UuZGV2aWNlT3JpZW50YXRpb24gIT09IGRldmljZU9yaWVudGF0aW9uKSB7XG4gICAgICAgICAgICAgIC8vIFdlIGRpc2FsbG93ZWQgY2hvb3NpbmcgdGhpcyBpbWFnZSBmb3IgY3VycmVudCBkZXZpY2Ugb3JpZW50YXRpb24sXG4gICAgICAgICAgICAgIC8vIFNvIHNraXAgdGhpcyBvbmUuXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChpbWFnZS53aW5kb3dPcmllbnRhdGlvbiAmJiBpbWFnZS53aW5kb3dPcmllbnRhdGlvbiAhPT0gZGV2aWNlT3JpZW50YXRpb24pIHtcbiAgICAgICAgICAgICAgLy8gV2UgZGlzYWxsb3dlZCBjaG9vc2luZyB0aGlzIGltYWdlIGZvciBjdXJyZW50IHdpbmRvdyBvcmllbnRhdGlvbixcbiAgICAgICAgICAgICAgLy8gU28gc2tpcCB0aGlzIG9uZS5cbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGltYWdlLm9yaWVudGF0aW9uICYmIGltYWdlLm9yaWVudGF0aW9uICE9PSB3cmFwcGVyT3JpZW50YXRpb24pIHtcbiAgICAgICAgICAgICAgLy8gV2UgZGlzYWxsb3dlZCBjaG9vc2luZyB0aGlzIGltYWdlIGZvciBjdXJyZW50IGVsZW1lbnQncyBvcmllbnRhdGlvbixcbiAgICAgICAgICAgICAgLy8gU28gc2tpcCB0aGlzIG9uZS5cbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gTWFyayB0aGlzIG9uZSBhcyB0aGUgbGFzdCBvbmUgd2UgaW52ZXN0aWdhdGVkXG4gICAgICAgICAgLy8gd2hpY2ggZG9lcyBub3QgdmlvbGF0ZSBkZXZpY2UgcGl4ZWwgcmF0aW8gcnVsZXMuXG4gICAgICAgICAgLy8gV2UgbWF5IGNob29zZSB0aGlzIG9uZSBsYXRlciBpZiB0aGVyZSdzIG5vIG1hdGNoLlxuICAgICAgICAgIGxhc3RBbGxvd2VkSW1hZ2UgPSBqO1xuXG4gICAgICAgICAgLy8gRm9yIG1vc3QgaW1hZ2VzLCB3ZSBtYXRjaCB0aGUgc3BlY2lmaWVkIHdpZHRoIGFnYWluc3QgZWxlbWVudCB3aWR0aCxcbiAgICAgICAgICAvLyBBbmQgZW5mb3JjaW5nIGEgbGltaXQgZGVwZW5kaW5nIG9uIHRoZSBcInBpeGVsUmF0aW9cIiBwcm9wZXJ0eSBpZiBzcGVjaWZpZWQuXG4gICAgICAgICAgLy8gQnV0IGlmIGEgcGl4ZWxSYXRpbz1cImF1dG9cIiwgdGhlbiB3ZSBjb25zaWRlciB0aGUgd2lkdGggYXMgdGhlIHBoeXNpY2FsIHdpZHRoIG9mIHRoZSBpbWFnZSxcbiAgICAgICAgICAvLyBBbmQgbWF0Y2ggaXQgd2hpbGUgY29uc2lkZXJpbmcgdGhlIGRldmljZSdzIHBpeGVsIHJhdGlvLlxuICAgICAgICAgIHRlc3RXaWR0aCA9IGNvbnRhaW5lcldpZHRoO1xuICAgICAgICAgIGlmIChpbWFnZS5waXhlbFJhdGlvID09PSAnYXV0bycpIHtcbiAgICAgICAgICAgICAgY29udGFpbmVyV2lkdGggKj0gZGV2aWNlUGl4ZWxSYXRpbztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBTdG9wIHdoZW4gdGhlIHdpZHRoIG9mIHRoZSBpbWFnZSBpcyBsYXJnZXIgb3IgZXF1YWwgdG8gdGhlIGNvbnRhaW5lciB3aWR0aFxuICAgICAgICAgIGlmIChpbWFnZS53aWR0aCA+PSB0ZXN0V2lkdGgpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBVc2UgdGhlIGltYWdlIGxvY2F0ZWQgYXQgd2hlcmUgd2Ugc3RvcHBlZFxuICAgICAgcmV0dXJuIGltYWdlU2l6ZXNbTWF0aC5taW4oaiwgbGFzdEFsbG93ZWRJbWFnZSldO1xuICAgIH07XG4gICAgXG4gICAgdmFyIHJlcGxhY2VUYWdzSW5VcmwgPSBmdW5jdGlvbiAodXJsLCB0ZW1wbGF0ZVJlcGxhY2VyKSB7XG4gICAgICAgIFxuICAgICAgICBpZiAodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHVybCA9IHVybC5yZXBsYWNlKC97eyh3aWR0aHxoZWlnaHQpfX0vZywgdGVtcGxhdGVSZXBsYWNlcik7XG4gICAgICAgIH0gZWxzZSBpZiAodXJsIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdXJsLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHVybFtpXS5zcmMpIHtcbiAgICAgICAgICAgICAgICAgICAgdXJsW2ldLnNyYyA9IHJlcGxhY2VUYWdzSW5VcmwodXJsW2ldLnNyYywgdGVtcGxhdGVSZXBsYWNlcik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdXJsW2ldID0gcmVwbGFjZVRhZ3NJblVybCh1cmxbaV0sIHRlbXBsYXRlUmVwbGFjZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgkY29udGFpbmVyLCBpbWFnZXMpIHtcbiAgICAgIHZhciBjb250YWluZXJXaWR0aCA9ICRjb250YWluZXIud2lkdGgoKSxcbiAgICAgICAgICBjb250YWluZXJIZWlnaHQgPSAkY29udGFpbmVyLmhlaWdodCgpO1xuXG4gICAgICB2YXIgY2hvc2VuSW1hZ2VzID0gW107XG5cbiAgICAgIHZhciB0ZW1wbGF0ZVJlcGxhY2VyID0gZnVuY3Rpb24gKG1hdGNoLCBrZXkpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gJ3dpZHRoJykge1xuICAgICAgICAgIHJldHVybiBjb250YWluZXJXaWR0aDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoa2V5ID09PSAnaGVpZ2h0Jykge1xuICAgICAgICAgIHJldHVybiBjb250YWluZXJIZWlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbWFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKCQuaXNBcnJheShpbWFnZXNbaV0pKSB7XG4gICAgICAgICAgaW1hZ2VzW2ldID0gd2lkdGhJbnNlcnRTb3J0KGltYWdlc1tpXSk7XG4gICAgICAgICAgdmFyIGNob3NlbiA9IHNlbGVjdEJlc3QoY29udGFpbmVyV2lkdGgsIGNvbnRhaW5lckhlaWdodCwgaW1hZ2VzW2ldKTtcbiAgICAgICAgICBjaG9zZW5JbWFnZXMucHVzaChjaG9zZW4pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIEluIGNhc2UgYSBuZXcgaW1hZ2Ugd2FzIHB1c2hlZCBpbiwgcHJvY2VzcyBpdDpcbiAgICAgICAgICBpZiAodHlwZW9mIGltYWdlc1tpXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgaW1hZ2VzW2ldID0geyB1cmw6IGltYWdlc1tpXSB9O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBpdGVtID0gJC5leHRlbmQoe30sIGltYWdlc1tpXSk7XG4gICAgICAgICAgaXRlbS51cmwgPSByZXBsYWNlVGFnc0luVXJsKGl0ZW0udXJsLCB0ZW1wbGF0ZVJlcGxhY2VyKTtcbiAgICAgICAgICBjaG9zZW5JbWFnZXMucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGNob3NlbkltYWdlcztcbiAgICB9O1xuXG4gIH0pKCk7XG4gIFxuICB2YXIgaXNWaWRlb1NvdXJjZSA9IGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICByZXR1cm4gWU9VVFVCRV9SRUdFWFAudGVzdChzb3VyY2UudXJsKSB8fCBzb3VyY2UuaXNWaWRlbztcbiAgfTtcblxuICAvKiBQcmVsb2FkIGltYWdlcyAqL1xuICB2YXIgcHJlbG9hZCA9IChmdW5jdGlvbiAoc291cmNlcywgc3RhcnRBdCwgY291bnQsIGJhdGNoU2l6ZSwgY2FsbGJhY2spIHtcbiAgICAvLyBQbHVnaW4gY2FjaGVcbiAgICB2YXIgY2FjaGUgPSBbXTtcblxuICAgIC8vIFdyYXBwZXIgZm9yIGNhY2hlXG4gICAgdmFyIGNhY2hpbmcgPSBmdW5jdGlvbihpbWFnZSl7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNhY2hlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChjYWNoZVtpXS5zcmMgPT09IGltYWdlLnNyYykge1xuICAgICAgICAgIHJldHVybiBjYWNoZVtpXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY2FjaGUucHVzaChpbWFnZSk7XG4gICAgICByZXR1cm4gaW1hZ2U7XG4gICAgfTtcblxuICAgIC8vIEV4ZWN1dGUgY2FsbGJhY2tcbiAgICB2YXIgZXhlYyA9IGZ1bmN0aW9uKHNvdXJjZXMsIGNhbGxiYWNrLCBsYXN0KXtcbiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY2FsbGJhY2suY2FsbChzb3VyY2VzLCBsYXN0KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gQ2xvc3VyZSB0byBoaWRlIGNhY2hlXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHByZWxvYWQgKHNvdXJjZXMsIHN0YXJ0QXQsIGNvdW50LCBiYXRjaFNpemUsIGNhbGxiYWNrKXtcbiAgICAgIC8vIENoZWNrIGlucHV0IGRhdGFcbiAgICAgIGlmICh0eXBlb2Ygc291cmNlcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKCEkLmlzQXJyYXkoc291cmNlcykpIHtcbiAgICAgICAgc291cmNlcyA9IFtzb3VyY2VzXTtcbiAgICAgIH1cblxuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCA1ICYmIHR5cGVvZiBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNhbGxiYWNrID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICAgIH1cblxuICAgICAgc3RhcnRBdCA9ICh0eXBlb2Ygc3RhcnRBdCA9PT0gJ2Z1bmN0aW9uJyB8fCAhc3RhcnRBdCkgPyAwIDogc3RhcnRBdDtcbiAgICAgIGNvdW50ID0gKHR5cGVvZiBjb3VudCA9PT0gJ2Z1bmN0aW9uJyB8fCAhY291bnQgfHwgY291bnQgPCAwKSA/IHNvdXJjZXMubGVuZ3RoIDogTWF0aC5taW4oY291bnQsIHNvdXJjZXMubGVuZ3RoKTtcbiAgICAgIGJhdGNoU2l6ZSA9ICh0eXBlb2YgYmF0Y2hTaXplID09PSAnZnVuY3Rpb24nIHx8ICFiYXRjaFNpemUpID8gMSA6IGJhdGNoU2l6ZTtcblxuICAgICAgaWYgKHN0YXJ0QXQgPj0gc291cmNlcy5sZW5ndGgpIHtcbiAgICAgICAgICBzdGFydEF0ID0gMDtcbiAgICAgICAgICBjb3VudCA9IDA7XG4gICAgICB9XG4gICAgICBpZiAoYmF0Y2hTaXplIDwgMCkge1xuICAgICAgICAgIGJhdGNoU2l6ZSA9IGNvdW50O1xuICAgICAgfVxuICAgICAgYmF0Y2hTaXplID0gTWF0aC5taW4oYmF0Y2hTaXplLCBjb3VudCk7XG5cbiAgICAgIHZhciBuZXh0ID0gc291cmNlcy5zbGljZShzdGFydEF0ICsgYmF0Y2hTaXplLCBjb3VudCAtIGJhdGNoU2l6ZSk7XG4gICAgICBzb3VyY2VzID0gc291cmNlcy5zbGljZShzdGFydEF0LCBiYXRjaFNpemUpO1xuICAgICAgY291bnQgPSBzb3VyY2VzLmxlbmd0aDtcblxuICAgICAgLy8gSWYgc291cmNlcyBhcnJheSBpcyBlbXB0eVxuICAgICAgaWYgKCFjb3VudCkge1xuICAgICAgICBleGVjKHNvdXJjZXMsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBJbWFnZSBsb2FkaW5nIGNhbGxiYWNrXG4gICAgICB2YXIgY291bnRMb2FkZWQgPSAwO1xuXG4gICAgICB2YXIgbG9hZGVkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvdW50TG9hZGVkKys7XG4gICAgICAgIGlmIChjb3VudExvYWRlZCAhPT0gY291bnQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBleGVjKHNvdXJjZXMsIGNhbGxiYWNrLCAhbmV4dCk7XG4gICAgICAgIHByZWxvYWQobmV4dCwgMCwgMCwgYmF0Y2hTaXplLCBjYWxsYmFjayk7XG4gICAgICB9O1xuXG4gICAgICAvLyBMb29wIHNvdXJjZXMgdG8gcHJlbG9hZFxuICAgICAgdmFyIGltYWdlO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvdXJjZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgXG4gICAgICAgIGlmIChpc1ZpZGVvU291cmNlKHNvdXJjZXNbaV0pKSB7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRG8gbm90IHByZWxvYWQgdmlkZW9zLiBUaGVyZSBhcmUgaXNzdWVzIHdpdGggdGhhdC5cbiAgICAgICAgICAvLyBGaXJzdCAtIHdlIG5lZWQgdG8ga2VlcCBhbiBpbnN0YW5jZSBvZiB0aGUgcHJlbG9hZGVkIGFuZCB1c2UgdGhhdCBleGFjdGx5LCBub3QgYSBjb3B5LlxuICAgICAgICAgIC8vIFNlY29uZCAtIHRoZXJlIGFyZSBtZW1vcnkgaXNzdWVzLlxuICAgICAgICAgIC8vIElmIHRoZXJlIHdpbGwgYmUgYSByZXF1aXJlbWVudCBmcm9tIHVzZXJzIC0gSSdsbCB0cnkgdG8gaW1wbGVtZW50IHRoaXMuXG5cbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgXG4gICAgICAgICAgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICBpbWFnZS5zcmMgPSBzb3VyY2VzW2ldLnVybDtcblxuICAgICAgICAgIGltYWdlID0gY2FjaGluZyhpbWFnZSk7XG5cbiAgICAgICAgICBpZiAoaW1hZ2UuY29tcGxldGUpIHtcbiAgICAgICAgICAgIGxvYWRlZCgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkKGltYWdlKS5vbignbG9hZCBlcnJvcicsIGxvYWRlZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICB9XG4gICAgfTtcbiAgfSkoKTtcblxuICAvKiBQcm9jZXNzIGltYWdlcyBhcnJheSAqL1xuICB2YXIgcHJvY2Vzc0ltYWdlc0FycmF5ID0gZnVuY3Rpb24gKGltYWdlcykge1xuICAgIHZhciBwcm9jZXNzZWQgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHR5cGVvZiBpbWFnZXNbaV0gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHByb2Nlc3NlZC5wdXNoKHsgdXJsOiBpbWFnZXNbaV0gfSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmICgkLmlzQXJyYXkoaW1hZ2VzW2ldKSkge1xuICAgICAgICBwcm9jZXNzZWQucHVzaChwcm9jZXNzSW1hZ2VzQXJyYXkoaW1hZ2VzW2ldKSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcHJvY2Vzc2VkLnB1c2gocHJvY2Vzc09wdGlvbnMoaW1hZ2VzW2ldKSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzZWQ7XG4gIH07XG5cbiAgLyogUHJvY2VzcyBvcHRpb25zICovXG4gIHZhciBwcm9jZXNzT3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zLCByZXF1aXJlZCkge1xuXG4gICAgLy8gQ29udmVydCBvbGQgb3B0aW9uc1xuXG4gICAgLy8gY2VudGVyZWRYL2NlbnRlcmVkWSBhcmUgZGVwcmVjYXRlZFxuICAgIGlmIChvcHRpb25zLmNlbnRlcmVkWCB8fCBvcHRpb25zLmNlbnRlcmVkWSkge1xuICAgICAgaWYgKHdpbmRvdy5jb25zb2xlICYmIHdpbmRvdy5jb25zb2xlLmxvZykge1xuICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJ2pxdWVyeS5iYWNrc3RyZXRjaDogYGNlbnRlcmVkWGAvYGNlbnRlcmVkWWAgaXMgZGVwcmVjYXRlZCwgcGxlYXNlIHVzZSBgYWxpZ25YYC9gYWxpZ25ZYCcpO1xuICAgICAgfVxuICAgICAgaWYgKG9wdGlvbnMuY2VudGVyZWRYKSB7XG4gICAgICAgIG9wdGlvbnMuYWxpZ25YID0gMC41O1xuICAgICAgfVxuICAgICAgaWYgKG9wdGlvbnMuY2VudGVyZWRZKSB7XG4gICAgICAgIG9wdGlvbnMuYWxpZ25ZID0gMC41O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERlcHJlY2F0ZWQgc3BlY1xuICAgIGlmIChvcHRpb25zLnNwZWVkICE9PSB1bmRlZmluZWQpIHtcblxuICAgICAgaWYgKHdpbmRvdy5jb25zb2xlICYmIHdpbmRvdy5jb25zb2xlLmxvZykge1xuICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJ2pxdWVyeS5iYWNrc3RyZXRjaDogYHNwZWVkYCBpcyBkZXByZWNhdGVkLCBwbGVhc2UgdXNlIGB0cmFuc2l0aW9uRHVyYXRpb25gJyk7XG4gICAgICB9XG5cbiAgICAgIG9wdGlvbnMudHJhbnNpdGlvbkR1cmF0aW9uID0gb3B0aW9ucy5zcGVlZDtcbiAgICAgIG9wdGlvbnMudHJhbnNpdGlvbiA9ICdmYWRlJztcbiAgICB9XG5cbiAgICAvLyBUeXBvXG4gICAgaWYgKG9wdGlvbnMucmVzb2x1dGlvbkNoYW5nZVJhdGlvVHJlc2hvbGQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgd2luZG93LmNvbnNvbGUubG9nKCdqcXVlcnkuYmFja3N0cmV0Y2g6IGB0cmVzaG9sZGAgaXMgYSB0eXBvIScpO1xuICAgICAgb3B0aW9ucy5yZXNvbHV0aW9uQ2hhbmdlUmF0aW9UaHJlc2hvbGQgPSBvcHRpb25zLnJlc29sdXRpb25DaGFuZ2VSYXRpb1RyZXNob2xkO1xuICAgIH1cblxuICAgIC8vIEN1cnJlbnQgc3BlYyB0aGF0IG5lZWRzIHByb2Nlc3NpbmdcblxuICAgIGlmIChvcHRpb25zLmZhZGVGaXJzdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBvcHRpb25zLmFuaW1hdGVGaXJzdCA9IG9wdGlvbnMuZmFkZUZpcnN0O1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmZhZGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgb3B0aW9ucy50cmFuc2l0aW9uRHVyYXRpb24gPSBvcHRpb25zLmZhZGU7XG4gICAgICBvcHRpb25zLnRyYW5zaXRpb24gPSAnZmFkZSc7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuc2NhbGUpIHtcbiAgICAgIG9wdGlvbnMuc2NhbGUgPSB2YWxpZFNjYWxlKG9wdGlvbnMuc2NhbGUpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcHJvY2Vzc0FsaWduT3B0aW9ucyhvcHRpb25zKTtcbiAgfTtcblxuICAvKiBQcm9jZXNzIGFsaWduIG9wdGlvbnMgKi9cbiAgdmFyIHByb2Nlc3NBbGlnbk9wdGlvbnMgPSBmdW5jdGlvbiAob3B0aW9ucywgcmVxdWlyZWQpIHtcbiAgICBpZiAob3B0aW9ucy5hbGlnblggPT09ICdsZWZ0Jykge1xuICAgICAgb3B0aW9ucy5hbGlnblggPSAwLjA7XG4gICAgfVxuICAgIGVsc2UgaWYgKG9wdGlvbnMuYWxpZ25YID09PSAnY2VudGVyJykge1xuICAgICAgb3B0aW9ucy5hbGlnblggPSAwLjU7XG4gICAgfVxuICAgIGVsc2UgaWYgKG9wdGlvbnMuYWxpZ25YID09PSAncmlnaHQnKSB7XG4gICAgICBvcHRpb25zLmFsaWduWCA9IDEuMDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5hbGlnblggIT09IHVuZGVmaW5lZCB8fCByZXF1aXJlZCkge1xuICAgICAgICBvcHRpb25zLmFsaWduWCA9IHBhcnNlRmxvYXQob3B0aW9ucy5hbGlnblgpO1xuICAgICAgICBpZiAoaXNOYU4ob3B0aW9ucy5hbGlnblgpKSB7XG4gICAgICAgICAgb3B0aW9ucy5hbGlnblggPSAwLjU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5hbGlnblkgPT09ICd0b3AnKSB7XG4gICAgICBvcHRpb25zLmFsaWduWSA9IDAuMDtcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0aW9ucy5hbGlnblkgPT09ICdjZW50ZXInKSB7XG4gICAgICBvcHRpb25zLmFsaWduWSA9IDAuNTtcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0aW9ucy5hbGlnblkgPT09ICdib3R0b20nKSB7XG4gICAgICBvcHRpb25zLmFsaWduWSA9IDEuMDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5hbGlnblggIT09IHVuZGVmaW5lZCB8fCByZXF1aXJlZCkge1xuICAgICAgICBvcHRpb25zLmFsaWduWSA9IHBhcnNlRmxvYXQob3B0aW9ucy5hbGlnblkpO1xuICAgICAgICBpZiAoaXNOYU4ob3B0aW9ucy5hbGlnblkpKSB7XG4gICAgICAgICAgb3B0aW9ucy5hbGlnblkgPSAwLjU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfTtcblxuICB2YXIgU1VQUE9SVEVEX1NDQUxFX09QVElPTlMgPSB7XG4gICAgICAnY292ZXInOiAnY292ZXInLFxuICAgICAgJ2ZpdCc6ICdmaXQnLFxuICAgICAgJ2ZpdC1zbWFsbGVyJzogJ2ZpdC1zbWFsbGVyJyxcbiAgICAgICdmaWxsJzogJ2ZpbGwnXG4gIH07XG4gIFxuICBmdW5jdGlvbiB2YWxpZFNjYWxlKHNjYWxlKSB7XG4gICAgaWYgKCFTVVBQT1JURURfU0NBTEVfT1BUSU9OUy5oYXNPd25Qcm9wZXJ0eShzY2FsZSkpIHtcbiAgICAgIHJldHVybiAnY292ZXInO1xuICAgIH1cbiAgICByZXR1cm4gc2NhbGU7XG4gIH1cbiAgXG4gIC8qIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuICB2YXIgQmFja3N0cmV0Y2ggPSBmdW5jdGlvbiAoY29udGFpbmVyLCBpbWFnZXMsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbi5iYWNrc3RyZXRjaC5kZWZhdWx0cywgb3B0aW9ucyB8fCB7fSk7XG5cbiAgICB0aGlzLmZpcnN0U2hvdyA9IHRydWU7XG5cbiAgICAvLyBQcm9jZXNzIG9wdGlvbnNcbiAgICBwcm9jZXNzT3B0aW9ucyh0aGlzLm9wdGlvbnMsIHRydWUpO1xuXG4gICAgLyogSW4gaXRzIHNpbXBsZXN0IGZvcm0sIHdlIGFsbG93IEJhY2tzdHJldGNoIHRvIGJlIGNhbGxlZCBvbiBhbiBpbWFnZSBwYXRoLlxuICAgICAqIGUuZy4gJC5iYWNrc3RyZXRjaCgnL3BhdGgvdG8vaW1hZ2UuanBnJylcbiAgICAgKiBTbywgd2UgbmVlZCB0byB0dXJuIHRoaXMgYmFjayBpbnRvIGFuIGFycmF5LlxuICAgICAqL1xuICAgIHRoaXMuaW1hZ2VzID0gcHJvY2Vzc0ltYWdlc0FycmF5KCQuaXNBcnJheShpbWFnZXMpID8gaW1hZ2VzIDogW2ltYWdlc10pO1xuXG4gICAgLyoqXG4gICAgICogUGF1c2VkLU9wdGlvblxuICAgICAqL1xuICAgIGlmICh0aGlzLm9wdGlvbnMucGF1c2VkKSB7XG4gICAgICAgIHRoaXMucGF1c2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydC1PcHRpb24gKEluZGV4KVxuICAgICAqL1xuICAgIGlmICh0aGlzLm9wdGlvbnMuc3RhcnQgPj0gdGhpcy5pbWFnZXMubGVuZ3RoKVxuICAgIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLnN0YXJ0ID0gdGhpcy5pbWFnZXMubGVuZ3RoIC0gMTtcbiAgICB9XG4gICAgaWYgKHRoaXMub3B0aW9ucy5zdGFydCA8IDApXG4gICAge1xuICAgICAgICB0aGlzLm9wdGlvbnMuc3RhcnQgPSAwO1xuICAgIH1cblxuICAgIC8vIENvbnZlbmllbmNlIHJlZmVyZW5jZSB0byBrbm93IGlmIHRoZSBjb250YWluZXIgaXMgYm9keS5cbiAgICB0aGlzLmlzQm9keSA9IGNvbnRhaW5lciA9PT0gZG9jdW1lbnQuYm9keTtcblxuICAgIC8qIFdlJ3JlIGtlZXBpbmcgdHJhY2sgb2YgYSBmZXcgZGlmZmVyZW50IGVsZW1lbnRzXG4gICAgICpcbiAgICAgKiBDb250YWluZXI6IHRoZSBlbGVtZW50IHRoYXQgQmFja3N0cmV0Y2ggd2FzIGNhbGxlZCBvbi5cbiAgICAgKiBXcmFwOiBhIERJViB0aGF0IHdlIHBsYWNlIHRoZSBpbWFnZSBpbnRvLCBzbyB3ZSBjYW4gaGlkZSB0aGUgb3ZlcmZsb3cuXG4gICAgICogUm9vdDogQ29udmVuaWVuY2UgcmVmZXJlbmNlIHRvIGhlbHAgY2FsY3VsYXRlIHRoZSBjb3JyZWN0IGhlaWdodC5cbiAgICAgKi9cbiAgICB2YXIgJHdpbmRvdyA9ICQod2luZG93KTtcbiAgICB0aGlzLiRjb250YWluZXIgPSAkKGNvbnRhaW5lcik7XG4gICAgdGhpcy4kcm9vdCA9IHRoaXMuaXNCb2R5ID8gc3VwcG9ydHNGaXhlZFBvc2l0aW9uID8gJHdpbmRvdyA6ICQoZG9jdW1lbnQpIDogdGhpcy4kY29udGFpbmVyO1xuXG4gICAgdGhpcy5vcmlnaW5hbEltYWdlcyA9IHRoaXMuaW1hZ2VzO1xuICAgIHRoaXMuaW1hZ2VzID0gb3B0aW1hbFNpemVJbWFnZXMoXG4gICAgICAgIHRoaXMub3B0aW9ucy5hbHdheXNUZXN0V2luZG93UmVzb2x1dGlvbiA/ICR3aW5kb3cgOiB0aGlzLiRyb290LCBcbiAgICAgICAgdGhpcy5vcmlnaW5hbEltYWdlcyk7XG5cbiAgICAvKipcbiAgICAgKiBQcmUtTG9hZGluZy5cbiAgICAgKiBUaGlzIGlzIHRoZSBmaXJzdCBpbWFnZSwgc28gd2Ugd2lsbCBwcmVsb2FkIGEgbWluaW11bSBvZiAxIGltYWdlcy5cbiAgICAgKi9cbiAgICBwcmVsb2FkKHRoaXMuaW1hZ2VzLCB0aGlzLm9wdGlvbnMuc3RhcnQgfHwgMCwgdGhpcy5vcHRpb25zLnByZWxvYWQgfHwgMSk7XG5cbiAgICAvLyBEb24ndCBjcmVhdGUgYSBuZXcgd3JhcCBpZiBvbmUgYWxyZWFkeSBleGlzdHMgKGZyb20gYSBwcmV2aW91cyBpbnN0YW5jZSBvZiBCYWNrc3RyZXRjaClcbiAgICB2YXIgJGV4aXN0aW5nID0gdGhpcy4kY29udGFpbmVyLmNoaWxkcmVuKFwiLmJhY2tzdHJldGNoXCIpLmZpcnN0KCk7XG4gICAgdGhpcy4kd3JhcCA9ICRleGlzdGluZy5sZW5ndGggPyAkZXhpc3RpbmcgOiBcbiAgICAgICAgJCgnPGRpdiBjbGFzcz1cImJhY2tzdHJldGNoXCI+PC9kaXY+JylcbiAgICAgICAgLmNzcyh0aGlzLm9wdGlvbnMuYnlwYXNzQ3NzID8ge30gOiBzdHlsZXMud3JhcClcbiAgICAgICAgLmFwcGVuZFRvKHRoaXMuJGNvbnRhaW5lcik7XG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5ieXBhc3NDc3MpIHtcbiAgICAgICAgXG4gICAgICAgIC8vIE5vbi1ib2R5IGVsZW1lbnRzIG5lZWQgc29tZSBzdHlsZSBhZGp1c3RtZW50c1xuICAgICAgICBpZiAoIXRoaXMuaXNCb2R5KSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGNvbnRhaW5lciBpcyBzdGF0aWNhbGx5IHBvc2l0aW9uZWQsIHdlIG5lZWQgdG8gbWFrZSBpdCByZWxhdGl2ZSxcbiAgICAgICAgICAvLyBhbmQgaWYgbm8gekluZGV4IGlzIGRlZmluZWQsIHdlIHNob3VsZCBzZXQgaXQgdG8gemVyby5cbiAgICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLiRjb250YWluZXIuY3NzKCdwb3NpdGlvbicpXG4gICAgICAgICAgICAsIHpJbmRleCA9IHRoaXMuJGNvbnRhaW5lci5jc3MoJ3pJbmRleCcpO1xuXG4gICAgICAgICAgdGhpcy4kY29udGFpbmVyLmNzcyh7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbiA9PT0gJ3N0YXRpYycgPyAncmVsYXRpdmUnIDogcG9zaXRpb25cbiAgICAgICAgICAgICwgekluZGV4OiB6SW5kZXggPT09ICdhdXRvJyA/IDAgOiB6SW5kZXhcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIC8vIE5lZWRzIGEgaGlnaGVyIHotaW5kZXhcbiAgICAgICAgICB0aGlzLiR3cmFwLmNzcyh7ekluZGV4OiAtOTk5OTk4fSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBGaXhlZCBvciBhYnNvbHV0ZSBwb3NpdGlvbmluZz9cbiAgICAgICAgdGhpcy4kd3JhcC5jc3Moe1xuICAgICAgICAgICAgcG9zaXRpb246IHRoaXMuaXNCb2R5ICYmIHN1cHBvcnRzRml4ZWRQb3NpdGlvbiA/ICdmaXhlZCcgOiAnYWJzb2x1dGUnXG4gICAgICAgIH0pO1xuICAgIFxuICAgIH1cblxuICAgIC8vIFNldCB0aGUgZmlyc3QgaW1hZ2VcbiAgICB0aGlzLmluZGV4ID0gdGhpcy5vcHRpb25zLnN0YXJ0O1xuICAgIHRoaXMuc2hvdyh0aGlzLmluZGV4KTtcblxuICAgIC8vIExpc3RlbiBmb3IgcmVzaXplXG4gICAgJHdpbmRvdy5vbigncmVzaXplLmJhY2tzdHJldGNoJywgJC5wcm94eSh0aGlzLnJlc2l6ZSwgdGhpcykpXG4gICAgICAgICAgIC5vbignb3JpZW50YXRpb25jaGFuZ2UuYmFja3N0cmV0Y2gnLCAkLnByb3h5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgLy8gTmVlZCB0byBkbyB0aGlzIGluIG9yZGVyIHRvIGdldCB0aGUgcmlnaHQgd2luZG93IGhlaWdodFxuICAgICAgICAgICAgICBpZiAodGhpcy5pc0JvZHkgJiYgd2luZG93LnBhZ2VZT2Zmc2V0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVzaXplKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgfSwgdGhpcykpO1xuICB9O1xuXG4gIHZhciBwZXJmb3JtVHJhbnNpdGlvbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICB2YXIgdHJhbnNpdGlvbiA9IG9wdGlvbnMudHJhbnNpdGlvbiB8fCAnZmFkZSc7XG5cbiAgICAvLyBMb29rIGZvciBtdWx0aXBsZSBvcHRpb25zXG4gICAgaWYgKHR5cGVvZiB0cmFuc2l0aW9uID09PSAnc3RyaW5nJyAmJiB0cmFuc2l0aW9uLmluZGV4T2YoJ3wnKSA+IC0xKSB7XG4gICAgICB0cmFuc2l0aW9uID0gdHJhbnNpdGlvbi5zcGxpdCgnfCcpO1xuICAgIH1cblxuICAgIGlmICh0cmFuc2l0aW9uIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgIHRyYW5zaXRpb24gPSB0cmFuc2l0aW9uW01hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqICh0cmFuc2l0aW9uLmxlbmd0aCAtIDEpKV07XG4gICAgfVxuICAgIFxuICAgIHZhciAkbmV3ID0gb3B0aW9uc1snbmV3J107XG4gICAgdmFyICRvbGQgPSBvcHRpb25zWydvbGQnXSA/IG9wdGlvbnNbJ29sZCddIDogJChbXSk7XG5cbiAgICBzd2l0Y2ggKHRyYW5zaXRpb24udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSB7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICBjYXNlICdmYWRlJzpcbiAgICAgICAgJG5ldy5mYWRlSW4oe1xuICAgICAgICAgIGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuICAgICAgICAgIGNvbXBsZXRlOiBvcHRpb25zLmNvbXBsZXRlLFxuICAgICAgICAgIGVhc2luZzogb3B0aW9ucy5lYXNpbmcgfHwgdW5kZWZpbmVkXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICBjYXNlICdmYWRlaW5vdXQnOlxuICAgICAgY2FzZSAnZmFkZV9pbl9vdXQnOlxuICAgICAgICAgICAgXG4gICAgICAgIHZhciBmYWRlSW5OZXcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkbmV3LmZhZGVJbih7XG4gICAgICAgICAgICAgIGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uIC8gMixcbiAgICAgICAgICAgICAgY29tcGxldGU6IG9wdGlvbnMuY29tcGxldGUsXG4gICAgICAgICAgICAgIGVhc2luZzogb3B0aW9ucy5lYXNpbmcgfHwgdW5kZWZpbmVkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIGlmICgkb2xkLmxlbmd0aCkge1xuICAgICAgICAgICAgJG9sZC5mYWRlT3V0KHtcbiAgICAgICAgICAgICAgZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24gLyAyLFxuICAgICAgICAgICAgICBjb21wbGV0ZTogZmFkZUluTmV3LFxuICAgICAgICAgICAgICBlYXNpbmc6IG9wdGlvbnMuZWFzaW5nIHx8IHVuZGVmaW5lZFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmYWRlSW5OZXcoKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3B1c2hsZWZ0JzpcbiAgICAgIGNhc2UgJ3B1c2hfbGVmdCc6XG4gICAgICBjYXNlICdwdXNocmlnaHQnOlxuICAgICAgY2FzZSAncHVzaF9yaWdodCc6XG4gICAgICBjYXNlICdwdXNodXAnOlxuICAgICAgY2FzZSAncHVzaF91cCc6XG4gICAgICBjYXNlICdwdXNoZG93bic6XG4gICAgICBjYXNlICdwdXNoX2Rvd24nOlxuICAgICAgY2FzZSAnY292ZXJsZWZ0JzpcbiAgICAgIGNhc2UgJ2NvdmVyX2xlZnQnOlxuICAgICAgY2FzZSAnY292ZXJyaWdodCc6XG4gICAgICBjYXNlICdjb3Zlcl9yaWdodCc6XG4gICAgICBjYXNlICdjb3ZlcnVwJzpcbiAgICAgIGNhc2UgJ2NvdmVyX3VwJzpcbiAgICAgIGNhc2UgJ2NvdmVyZG93bic6XG4gICAgICBjYXNlICdjb3Zlcl9kb3duJzpcblxuICAgICAgICB2YXIgdHJhbnNpdGlvblBhcnRzID0gdHJhbnNpdGlvbi5tYXRjaCgvXihjb3ZlcnxwdXNoKV8/KC4qKSQvKTtcblxuICAgICAgICB2YXIgYW5pbVByb3AgPSB0cmFuc2l0aW9uUGFydHNbMl0gPT09ICdsZWZ0JyA/ICdyaWdodCcgOlxuICAgICAgICAgICAgdHJhbnNpdGlvblBhcnRzWzJdID09PSAncmlnaHQnID8gJ2xlZnQnIDpcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uUGFydHNbMl0gPT09ICdkb3duJyA/ICd0b3AnIDpcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvblBhcnRzWzJdID09PSAndXAnID8gJ2JvdHRvbScgOlxuICAgICAgICAgICAgICAgICAgICAgICAgJ3JpZ2h0JztcblxuICAgICAgICB2YXIgbmV3Q3NzU3RhcnQgPSB7XG4gICAgICAgICAgJ2Rpc3BsYXknOiAnJ1xuICAgICAgICB9LCBuZXdDc3NBbmltID0ge307XG4gICAgICAgIG5ld0Nzc1N0YXJ0W2FuaW1Qcm9wXSA9ICctMTAwJSc7XG4gICAgICAgIG5ld0Nzc0FuaW1bYW5pbVByb3BdID0gMDtcblxuICAgICAgICAkbmV3XG4gICAgICAgICAgICAuY3NzKG5ld0Nzc1N0YXJ0KVxuICAgICAgICAgICAgLmFuaW1hdGUobmV3Q3NzQW5pbSwge1xuICAgICAgICAgICAgICBkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcbiAgICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkbmV3LmNzcyhhbmltUHJvcCwgJycpO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuY29tcGxldGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZWFzaW5nOiBvcHRpb25zLmVhc2luZyB8fCB1bmRlZmluZWRcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0cmFuc2l0aW9uUGFydHNbMV0gPT09ICdwdXNoJyAmJiAkb2xkLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIG9sZENzc0FuaW0gPSB7fTtcbiAgICAgICAgICAgIG9sZENzc0FuaW1bYW5pbVByb3BdID0gJzEwMCUnO1xuXG4gICAgICAgICAgICAkb2xkXG4gICAgICAgICAgICAgICAgLmFuaW1hdGUob2xkQ3NzQW5pbSwge1xuICAgICAgICAgICAgICAgICAgZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sXG4gICAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkb2xkLmNzcygnZGlzcGxheScsICdub25lJyk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZWFzaW5nOiBvcHRpb25zLmVhc2luZyB8fCB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICB9O1xuXG4gIC8qIFBVQkxJQyBNRVRIT0RTXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiAgQmFja3N0cmV0Y2gucHJvdG90eXBlID0ge1xuXG4gICAgICByZXNpemU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHJ5IHtcblxuICAgICAgICAgIC8vIENoZWNrIGZvciBhIGJldHRlciBzdWl0ZWQgaW1hZ2UgYWZ0ZXIgdGhlIHJlc2l6ZVxuICAgICAgICAgIHZhciAkcmVzVGVzdCA9IHRoaXMub3B0aW9ucy5hbHdheXNUZXN0V2luZG93UmVzb2x1dGlvbiA/ICQod2luZG93KSA6IHRoaXMuJHJvb3Q7XG4gICAgICAgICAgdmFyIG5ld0NvbnRhaW5lcldpZHRoID0gJHJlc1Rlc3Qud2lkdGgoKTtcbiAgICAgICAgICB2YXIgbmV3Q29udGFpbmVySGVpZ2h0ID0gJHJlc1Rlc3QuaGVpZ2h0KCk7XG4gICAgICAgICAgdmFyIGNoYW5nZVJhdGlvVyA9IG5ld0NvbnRhaW5lcldpZHRoIC8gKHRoaXMuX2xhc3RSZXNpemVDb250YWluZXJXaWR0aCB8fCAwKTtcbiAgICAgICAgICB2YXIgY2hhbmdlUmF0aW9IID0gbmV3Q29udGFpbmVySGVpZ2h0IC8gKHRoaXMuX2xhc3RSZXNpemVDb250YWluZXJIZWlnaHQgfHwgMCk7XG4gICAgICAgICAgdmFyIHJlc29sdXRpb25DaGFuZ2VSYXRpb1RocmVzaG9sZCA9IHRoaXMub3B0aW9ucy5yZXNvbHV0aW9uQ2hhbmdlUmF0aW9UaHJlc2hvbGQgfHwgMC4wO1xuXG4gICAgICAgICAgLy8gY2hlY2sgZm9yIGJpZyBjaGFuZ2VzIGluIGNvbnRhaW5lciBzaXplXG4gICAgICAgICAgaWYgKChuZXdDb250YWluZXJXaWR0aCAhPT0gdGhpcy5fbGFzdFJlc2l6ZUNvbnRhaW5lcldpZHRoIHx8XG4gICAgICAgICAgICAgICBuZXdDb250YWluZXJIZWlnaHQgIT09IHRoaXMuX2xhc3RSZXNpemVDb250YWluZXJIZWlnaHQpICYmXG4gICAgICAgICAgICAgICgoTWF0aC5hYnMoY2hhbmdlUmF0aW9XIC0gMSkgPj0gcmVzb2x1dGlvbkNoYW5nZVJhdGlvVGhyZXNob2xkIHx8IGlzTmFOKGNoYW5nZVJhdGlvVykpIHx8XG4gICAgICAgICAgICAgIChNYXRoLmFicyhjaGFuZ2VSYXRpb0ggLSAxKSA+PSByZXNvbHV0aW9uQ2hhbmdlUmF0aW9UaHJlc2hvbGQgfHwgaXNOYU4oY2hhbmdlUmF0aW9IKSkpKSB7XG5cbiAgICAgICAgICAgIHRoaXMuX2xhc3RSZXNpemVDb250YWluZXJXaWR0aCA9IG5ld0NvbnRhaW5lcldpZHRoO1xuICAgICAgICAgICAgdGhpcy5fbGFzdFJlc2l6ZUNvbnRhaW5lckhlaWdodCA9IG5ld0NvbnRhaW5lckhlaWdodDtcblxuICAgICAgICAgICAgLy8gQmlnIGNoYW5nZTogcmVidWlsZCB0aGUgZW50aXJlIGltYWdlcyBhcnJheVxuICAgICAgICAgICAgdGhpcy5pbWFnZXMgPSBvcHRpbWFsU2l6ZUltYWdlcygkcmVzVGVzdCwgdGhpcy5vcmlnaW5hbEltYWdlcyk7XG5cbiAgICAgICAgICAgIC8vIFByZWxvYWQgdGhlbSAodGhleSB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgaW5zZXJ0ZWQgb24gdGhlIG5leHQgY3ljbGUpXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnByZWxvYWQpIHtcbiAgICAgICAgICAgICAgcHJlbG9hZCh0aGlzLmltYWdlcywgKHRoaXMuaW5kZXggKyAxKSAlIHRoaXMuaW1hZ2VzLmxlbmd0aCwgdGhpcy5vcHRpb25zLnByZWxvYWQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBJbiBjYXNlIHRoZXJlIGlzIG5vIGN5Y2xlIGFuZCB0aGUgbmV3IHNvdXJjZSBpcyBkaWZmZXJlbnQgdGhhbiB0aGUgY3VycmVudFxuICAgICAgICAgICAgaWYgKHRoaXMuaW1hZ2VzLmxlbmd0aCA9PT0gMSAmJlxuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRJbWFnZS51cmwgIT09IHRoaXMuaW1hZ2VzWzBdLnVybCkge1xuXG4gICAgICAgICAgICAgIC8vIFdhaXQgYSBsaXR0bGUgYW4gdXBkYXRlIHRoZSBpbWFnZSBiZWluZyBzaG93ZWRcbiAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhhdC5fc2VsZWN0QW5vdGhlclJlc29sdXRpb25UaW1lb3V0KTtcbiAgICAgICAgICAgICAgdGhhdC5fc2VsZWN0QW5vdGhlclJlc29sdXRpb25UaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhhdC5zaG93KDApO1xuICAgICAgICAgICAgICB9LCB0aGlzLm9wdGlvbnMucmVzb2x1dGlvblJlZnJlc2hSYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgYmdDU1MgPSB7bGVmdDogMCwgdG9wOiAwLCByaWdodDogJ2F1dG8nLCBib3R0b206ICdhdXRvJ31cbiAgICAgICAgICBcbiAgICAgICAgICAgICwgYm94V2lkdGggPSB0aGlzLmlzQm9keSA/IHRoaXMuJHJvb3Qud2lkdGgoKSA6IHRoaXMuJHJvb3QuaW5uZXJXaWR0aCgpXG4gICAgICAgICAgICAsIGJveEhlaWdodCA9IHRoaXMuaXNCb2R5ID8gKCB3aW5kb3cuaW5uZXJIZWlnaHQgPyB3aW5kb3cuaW5uZXJIZWlnaHQgOiB0aGlzLiRyb290LmhlaWdodCgpICkgOiB0aGlzLiRyb290LmlubmVySGVpZ2h0KClcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLCBuYXR1cmFsV2lkdGggPSB0aGlzLiRpdGVtV3JhcHBlci5kYXRhKCd3aWR0aCcpXG4gICAgICAgICAgICAsIG5hdHVyYWxIZWlnaHQgPSB0aGlzLiRpdGVtV3JhcHBlci5kYXRhKCdoZWlnaHQnKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAsIHJhdGlvID0gKG5hdHVyYWxXaWR0aCAvIG5hdHVyYWxIZWlnaHQpIHx8IDFcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAsIGFsaWduWCA9IHRoaXMuX2N1cnJlbnRJbWFnZS5hbGlnblggPT09IHVuZGVmaW5lZCA/IHRoaXMub3B0aW9ucy5hbGlnblggOiB0aGlzLl9jdXJyZW50SW1hZ2UuYWxpZ25YXG4gICAgICAgICAgICAsIGFsaWduWSA9IHRoaXMuX2N1cnJlbnRJbWFnZS5hbGlnblkgPT09IHVuZGVmaW5lZCA/IHRoaXMub3B0aW9ucy5hbGlnblkgOiB0aGlzLl9jdXJyZW50SW1hZ2UuYWxpZ25ZXG4gICAgICAgICAgICAsIHNjYWxlID0gdmFsaWRTY2FsZSh0aGlzLl9jdXJyZW50SW1hZ2Uuc2NhbGUgfHwgdGhpcy5vcHRpb25zLnNjYWxlKTtcbiAgICAgICAgICBcbiAgICAgICAgICB2YXIgd2lkdGgsIGhlaWdodDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICBpZiAoc2NhbGUgPT09ICdmaXQnIHx8IHNjYWxlID09PSAnZml0LXNtYWxsZXInKSB7XG4gICAgICAgICAgICB3aWR0aCA9IG5hdHVyYWxXaWR0aDtcbiAgICAgICAgICAgIGhlaWdodCA9IG5hdHVyYWxIZWlnaHQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICh3aWR0aCA+IGJveFdpZHRoIHx8IFxuICAgICAgICAgICAgICAgIGhlaWdodCA+IGJveEhlaWdodCB8fCBcbiAgICAgICAgICAgICAgICBzY2FsZSA9PT0gJ2ZpdC1zbWFsbGVyJykge1xuICAgICAgICAgICAgICB2YXIgYm94UmF0aW8gPSBib3hXaWR0aCAvIGJveEhlaWdodDtcbiAgICAgICAgICAgICAgaWYgKGJveFJhdGlvID4gcmF0aW8pIHtcbiAgICAgICAgICAgICAgICB3aWR0aCA9IE1hdGguZmxvb3IoYm94SGVpZ2h0ICogcmF0aW8pO1xuICAgICAgICAgICAgICAgIGhlaWdodCA9IGJveEhlaWdodDtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChib3hSYXRpbyA8IHJhdGlvKSB7XG4gICAgICAgICAgICAgICAgd2lkdGggPSBib3hXaWR0aDtcbiAgICAgICAgICAgICAgICBoZWlnaHQgPSBNYXRoLmZsb29yKGJveFdpZHRoIC8gcmF0aW8pO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHdpZHRoID0gYm94V2lkdGg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gYm94SGVpZ2h0O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChzY2FsZSA9PT0gJ2ZpbGwnKSB7XG4gICAgICAgICAgICB3aWR0aCA9IGJveFdpZHRoO1xuICAgICAgICAgICAgaGVpZ2h0ID0gYm94SGVpZ2h0O1xuICAgICAgICAgIH0gZWxzZSB7IC8vICdjb3ZlcidcbiAgICAgICAgICAgIHdpZHRoID0gTWF0aC5tYXgoYm94SGVpZ2h0ICogcmF0aW8sIGJveFdpZHRoKTtcbiAgICAgICAgICAgIGhlaWdodCA9IE1hdGgubWF4KHdpZHRoIC8gcmF0aW8sIGJveEhlaWdodCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIE1ha2UgYWRqdXN0bWVudHMgYmFzZWQgb24gaW1hZ2UgcmF0aW9cbiAgICAgICAgICBiZ0NTUy50b3AgPSAtKGhlaWdodCAtIGJveEhlaWdodCkgKiBhbGlnblk7XG4gICAgICAgICAgYmdDU1MubGVmdCA9IC0od2lkdGggLSBib3hXaWR0aCkgKiBhbGlnblg7XG4gICAgICAgICAgYmdDU1Mud2lkdGggPSB3aWR0aDtcbiAgICAgICAgICBiZ0NTUy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuYnlwYXNzQ3NzKSB7XG5cbiAgICAgICAgICAgIHRoaXMuJHdyYXBcbiAgICAgICAgICAgICAgICAuY3NzKHt3aWR0aDogYm94V2lkdGgsIGhlaWdodDogYm94SGVpZ2h0fSlcbiAgICAgICAgICAgICAgICAuZmluZCgnPi5iYWNrc3RyZXRjaC1pdGVtJykubm90KCcuZGVsZXRlYWJsZScpXG4gICAgICAgICAgICAgICAgLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyICR3cmFwcGVyID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICR3cmFwcGVyLmZpbmQoJ2ltZyx2aWRlbyxpZnJhbWUnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAuY3NzKGJnQ1NTKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgZXZ0ID0gJC5FdmVudCgnYmFja3N0cmV0Y2gucmVzaXplJywge1xuICAgICAgICAgICAgICAgICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHRoaXMuJGNvbnRhaW5lclswXVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLiRjb250YWluZXIudHJpZ2dlcihldnQsIHRoaXMpO1xuICAgICAgICAgIFxuICAgICAgICB9IGNhdGNoKGVycikge1xuICAgICAgICAgICAgLy8gSUU3IHNlZW1zIHRvIHRyaWdnZXIgcmVzaXplIGJlZm9yZSB0aGUgaW1hZ2UgaXMgbG9hZGVkLlxuICAgICAgICAgICAgLy8gVGhpcyB0cnkvY2F0Y2ggYmxvY2sgaXMgYSBoYWNrIHRvIGxldCBpdCBmYWlsIGdyYWNlZnVsbHkuXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICAgLy8gU2hvdyB0aGUgc2xpZGUgYXQgYSBjZXJ0YWluIHBvc2l0aW9uXG4gICAgLCBzaG93OiBmdW5jdGlvbiAobmV3SW5kZXgsIG92ZXJyaWRlT3B0aW9ucykge1xuXG4gICAgICAgIC8vIFZhbGlkYXRlIGluZGV4XG4gICAgICAgIGlmIChNYXRoLmFicyhuZXdJbmRleCkgPiB0aGlzLmltYWdlcy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVmFyc1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXNcbiAgICAgICAgICAsICRvbGRJdGVtV3JhcHBlciA9IHRoYXQuJHdyYXAuZmluZCgnPi5iYWNrc3RyZXRjaC1pdGVtJykuYWRkQ2xhc3MoJ2RlbGV0ZWFibGUnKVxuICAgICAgICAgICwgb2xkVmlkZW9XcmFwcGVyID0gdGhhdC52aWRlb1dyYXBwZXJcbiAgICAgICAgICAsIGV2dE9wdGlvbnMgPSB7IHJlbGF0ZWRUYXJnZXQ6IHRoYXQuJGNvbnRhaW5lclswXSB9O1xuXG4gICAgICAgIC8vIFRyaWdnZXIgdGhlIFwiYmVmb3JlXCIgZXZlbnRcbiAgICAgICAgdGhhdC4kY29udGFpbmVyLnRyaWdnZXIoJC5FdmVudCgnYmFja3N0cmV0Y2guYmVmb3JlJywgZXZ0T3B0aW9ucyksIFt0aGF0LCBuZXdJbmRleF0pO1xuXG4gICAgICAgIC8vIFNldCB0aGUgbmV3IGZyYW1lIGluZGV4XG4gICAgICAgIHRoaXMuaW5kZXggPSBuZXdJbmRleDtcbiAgICAgICAgdmFyIHNlbGVjdGVkSW1hZ2UgPSB0aGF0LmltYWdlc1tuZXdJbmRleF07XG5cbiAgICAgICAgLy8gUGF1c2UgdGhlIHNsaWRlc2hvd1xuICAgICAgICBjbGVhclRpbWVvdXQodGhhdC5fY3ljbGVUaW1lb3V0KTtcblxuICAgICAgICAvLyBOZXcgaW1hZ2VcblxuICAgICAgICBkZWxldGUgdGhhdC52aWRlb1dyYXBwZXI7IC8vIEN1cnJlbnQgaXRlbSBtYXkgbm90IGJlIGEgdmlkZW9cblxuICAgICAgICB2YXIgaXNWaWRlbyA9IGlzVmlkZW9Tb3VyY2Uoc2VsZWN0ZWRJbWFnZSk7XG4gICAgICAgIGlmIChpc1ZpZGVvKSB7XG4gICAgICAgICAgdGhhdC52aWRlb1dyYXBwZXIgPSBuZXcgVmlkZW9XcmFwcGVyKHNlbGVjdGVkSW1hZ2UpO1xuICAgICAgICAgIHRoYXQuJGl0ZW0gPSB0aGF0LnZpZGVvV3JhcHBlci4kdmlkZW8uY3NzKCdwb2ludGVyLWV2ZW50cycsICdub25lJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhhdC4kaXRlbSA9ICQoJzxpbWcgLz4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoYXQuJGl0ZW1XcmFwcGVyID0gJCgnPGRpdiBjbGFzcz1cImJhY2tzdHJldGNoLWl0ZW1cIj4nKVxuICAgICAgICAgICAgLmFwcGVuZCh0aGF0LiRpdGVtKTtcblxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJ5cGFzc0Nzcykge1xuICAgICAgICAgICAgdGhhdC4kaXRlbVdyYXBwZXIuY3NzKHtcbiAgICAgICAgICAgICAgJ2Rpc3BsYXknOiAnbm9uZSdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoYXQuJGl0ZW1XcmFwcGVyLmNzcyhzdHlsZXMuaXRlbVdyYXBwZXIpO1xuICAgICAgICAgIHRoYXQuJGl0ZW0uY3NzKHN0eWxlcy5pdGVtKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoYXQuJGl0ZW0uYmluZChpc1ZpZGVvID8gJ2NhbnBsYXknIDogJ2xvYWQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKVxuICAgICAgICAgICAgICAsICR3cmFwcGVyID0gJHRoaXMucGFyZW50KClcbiAgICAgICAgICAgICAgLCBvcHRpb25zID0gJHdyYXBwZXIuZGF0YSgnb3B0aW9ucycpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChvdmVycmlkZU9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBvcHRpb25zLCBvdmVycmlkZU9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgaW1nV2lkdGggPSB0aGlzLm5hdHVyYWxXaWR0aCB8fCB0aGlzLnZpZGVvV2lkdGggfHwgdGhpcy53aWR0aFxuICAgICAgICAgICAgICAsIGltZ0hlaWdodCA9IHRoaXMubmF0dXJhbEhlaWdodCB8fCB0aGlzLnZpZGVvSGVpZ2h0IHx8IHRoaXMuaGVpZ2h0O1xuXG4gICAgICAgICAgICAvLyBTYXZlIHRoZSBuYXR1cmFsIGRpbWVuc2lvbnNcbiAgICAgICAgICAgICR3cmFwcGVyXG4gICAgICAgICAgICAgICAgLmRhdGEoJ3dpZHRoJywgaW1nV2lkdGgpXG4gICAgICAgICAgICAgICAgLmRhdGEoJ2hlaWdodCcsIGltZ0hlaWdodCk7XG5cbiAgICAgICAgICAgIHZhciBnZXRPcHRpb24gPSBmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgICAgICAgIHJldHVybiBvcHRpb25zW29wdF0gIT09IHVuZGVmaW5lZCA/XG4gICAgICAgICAgICAgICAgb3B0aW9uc1tvcHRdIDpcbiAgICAgICAgICAgICAgICB0aGF0Lm9wdGlvbnNbb3B0XTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHZhciB0cmFuc2l0aW9uID0gZ2V0T3B0aW9uKCd0cmFuc2l0aW9uJyk7XG4gICAgICAgICAgICB2YXIgdHJhbnNpdGlvbkVhc2luZyA9IGdldE9wdGlvbigndHJhbnNpdGlvbkVhc2luZycpO1xuICAgICAgICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IGdldE9wdGlvbigndHJhbnNpdGlvbkR1cmF0aW9uJyk7XG5cbiAgICAgICAgICAgIC8vIFNob3cgdGhlIGltYWdlLCB0aGVuIGRlbGV0ZSB0aGUgb2xkIG9uZVxuICAgICAgICAgICAgdmFyIGJyaW5nSW5OZXh0SW1hZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBpZiAob2xkVmlkZW9XcmFwcGVyKSB7XG4gICAgICAgICAgICAgICAgb2xkVmlkZW9XcmFwcGVyLnN0b3AoKTtcbiAgICAgICAgICAgICAgICBvbGRWaWRlb1dyYXBwZXIuZGVzdHJveSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAkb2xkSXRlbVdyYXBwZXIucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgICAgLy8gUmVzdW1lIHRoZSBzbGlkZXNob3dcbiAgICAgICAgICAgICAgaWYgKCF0aGF0LnBhdXNlZCAmJiB0aGF0LmltYWdlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgdGhhdC5jeWNsZSgpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgLy8gTm93IHdlIGNhbiBjbGVhciB0aGUgYmFja2dyb3VuZCBvbiB0aGUgZWxlbWVudCwgdG8gc3BhcmUgbWVtb3J5XG4gICAgICAgICAgICAgIGlmICghdGhhdC5vcHRpb25zLmJ5cGFzc0NzcyAmJiAhdGhhdC5pc0JvZHkpIHtcbiAgICAgICAgICAgICAgICB0aGF0LiRjb250YWluZXIuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJywgJ25vbmUnKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIFRyaWdnZXIgdGhlIFwiYWZ0ZXJcIiBhbmQgXCJzaG93XCIgZXZlbnRzXG4gICAgICAgICAgICAgIC8vIFwic2hvd1wiIGlzIGJlaW5nIGRlcHJlY2F0ZWRcbiAgICAgICAgICAgICAgJChbJ2FmdGVyJywgJ3Nob3cnXSkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhhdC4kY29udGFpbmVyLnRyaWdnZXIoJC5FdmVudCgnYmFja3N0cmV0Y2guJyArIHRoaXMsIGV2dE9wdGlvbnMpLCBbdGhhdCwgbmV3SW5kZXhdKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBpZiAoaXNWaWRlbykge1xuICAgICAgICAgICAgICAgIHRoYXQudmlkZW9XcmFwcGVyLnBsYXkoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaWYgKCh0aGF0LmZpcnN0U2hvdyAmJiAhdGhhdC5vcHRpb25zLmFuaW1hdGVGaXJzdCkgfHwgIXRyYW5zaXRpb25EdXJhdGlvbiB8fCAhdHJhbnNpdGlvbikge1xuICAgICAgICAgICAgICAgIC8vIEF2b2lkIHRyYW5zaXRpb24gb24gZmlyc3Qgc2hvdyBvciBpZiB0aGVyZSdzIG5vIHRyYW5zaXRpb25EdXJhdGlvbiB2YWx1ZVxuICAgICAgICAgICAgICAgICR3cmFwcGVyLnNob3coKTtcbiAgICAgICAgICAgICAgICBicmluZ0luTmV4dEltYWdlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgcGVyZm9ybVRyYW5zaXRpb24oe1xuICAgICAgICAgICAgICAgICAgICAnbmV3JzogJHdyYXBwZXIsXG4gICAgICAgICAgICAgICAgICAgIG9sZDogJG9sZEl0ZW1XcmFwcGVyLFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogdHJhbnNpdGlvbkR1cmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBlYXNpbmc6IHRyYW5zaXRpb25FYXNpbmcsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBicmluZ0luTmV4dEltYWdlXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhhdC5maXJzdFNob3cgPSBmYWxzZTtcblxuICAgICAgICAgICAgLy8gUmVzaXplXG4gICAgICAgICAgICB0aGF0LnJlc2l6ZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGF0LiRpdGVtV3JhcHBlci5hcHBlbmRUbyh0aGF0LiR3cmFwKTtcblxuICAgICAgICB0aGF0LiRpdGVtLmF0dHIoJ2FsdCcsIHNlbGVjdGVkSW1hZ2UuYWx0IHx8ICcnKTtcbiAgICAgICAgdGhhdC4kaXRlbVdyYXBwZXIuZGF0YSgnb3B0aW9ucycsIHNlbGVjdGVkSW1hZ2UpO1xuXG4gICAgICAgIGlmICghaXNWaWRlbykge1xuICAgICAgICAgIHRoYXQuJGl0ZW0uYXR0cignc3JjJywgc2VsZWN0ZWRJbWFnZS51cmwpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0aGF0Ll9jdXJyZW50SW1hZ2UgPSBzZWxlY3RlZEltYWdlO1xuXG4gICAgICAgIHJldHVybiB0aGF0O1xuICAgICAgfVxuXG4gICAgLCBjdXJyZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluZGV4O1xuICAgICAgfVxuXG4gICAgLCBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTtcbiAgICAgICAgYXJncy51bnNoaWZ0KHRoaXMuaW5kZXggPCB0aGlzLmltYWdlcy5sZW5ndGggLSAxID8gdGhpcy5pbmRleCArIDEgOiAwKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2hvdy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICwgcHJldjogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMCk7XG4gICAgICAgIGFyZ3MudW5zaGlmdCh0aGlzLmluZGV4ID09PSAwID8gdGhpcy5pbWFnZXMubGVuZ3RoIC0gMSA6IHRoaXMuaW5kZXggLSAxKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2hvdy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICwgcGF1c2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gUGF1c2UgdGhlIHNsaWRlc2hvd1xuICAgICAgICB0aGlzLnBhdXNlZCA9IHRydWU7XG4gICAgICAgIFxuICAgICAgICBpZiAodGhpcy52aWRlb1dyYXBwZXIpIHtcbiAgICAgICAgICB0aGlzLnZpZGVvV3JhcHBlci5wYXVzZSgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICwgcmVzdW1lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFJlc3VtZSB0aGUgc2xpZGVzaG93XG4gICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICBpZiAodGhpcy52aWRlb1dyYXBwZXIpIHtcbiAgICAgICAgICB0aGlzLnZpZGVvV3JhcHBlci5wbGF5KCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRoaXMuY3ljbGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAsIGN5Y2xlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFN0YXJ0L3Jlc3VtZSB0aGUgc2xpZGVzaG93XG4gICAgICAgIGlmKHRoaXMuaW1hZ2VzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAvLyBDbGVhciB0aGUgdGltZW91dCwganVzdCBpbiBjYXNlXG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX2N5Y2xlVGltZW91dCk7XG5cbiAgICAgICAgICB2YXIgZHVyYXRpb24gPSAodGhpcy5fY3VycmVudEltYWdlICYmIHRoaXMuX2N1cnJlbnRJbWFnZS5kdXJhdGlvbikgfHwgdGhpcy5vcHRpb25zLmR1cmF0aW9uO1xuICAgICAgICAgIHZhciBpc1ZpZGVvID0gaXNWaWRlb1NvdXJjZSh0aGlzLl9jdXJyZW50SW1hZ2UpO1xuICAgICAgICAgIFxuICAgICAgICAgIHZhciBjYWxsTmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuJGl0ZW0ub2ZmKCcuY3ljbGUnKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIHBhdXNlZCBzbGlkZXNob3dcbiAgICAgICAgICAgIGlmICghdGhpcy5wYXVzZWQpIHtcbiAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vIFNwZWNpYWwgdmlkZW8gaGFuZGxpbmdcbiAgICAgICAgICBpZiAoaXNWaWRlbykge1xuXG4gICAgICAgICAgICAvLyBMZWF2ZSB2aWRlbyBhdCBsYXN0IGZyYW1lXG4gICAgICAgICAgICBpZiAoIXRoaXMuX2N1cnJlbnRJbWFnZS5sb29wKSB7XG4gICAgICAgICAgICAgIHZhciBsYXN0RnJhbWVUaW1lb3V0ID0gMDtcblxuICAgICAgICAgICAgICB0aGlzLiRpdGVtXG4gICAgICAgICAgICAgICAgLm9uKCdwbGF5aW5nLmN5Y2xlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgdmFyIHBsYXllciA9ICQodGhpcykuZGF0YSgncGxheWVyJyk7XG5cbiAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChsYXN0RnJhbWVUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICAgIGxhc3RGcmFtZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIHBsYXllci4kdmlkZW8udHJpZ2dlcignZW5kZWQnKTtcbiAgICAgICAgICAgICAgICAgIH0sIChwbGF5ZXIuZ2V0RHVyYXRpb24oKSAtIHBsYXllci5nZXRDdXJyZW50VGltZSgpKSAqIDEwMDApO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLm9uKCdlbmRlZC5jeWNsZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChsYXN0RnJhbWVUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gT24gZXJyb3IgZ28gdG8gbmV4dFxuICAgICAgICAgICAgdGhpcy4kaXRlbS5vbignZXJyb3IuY3ljbGUgaW5pdGVycm9yLmN5Y2xlJywgJC5wcm94eShjYWxsTmV4dCwgdGhpcykpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChpc1ZpZGVvICYmICF0aGlzLl9jdXJyZW50SW1hZ2UuZHVyYXRpb24pIHtcbiAgICAgICAgICAgIC8vIEl0J3MgYSB2aWRlbyAtIHBsYXlpbmcgdW50aWwgZW5kXG4gICAgICAgICAgICB0aGlzLiRpdGVtLm9uKCdlbmRlZC5jeWNsZScsICQucHJveHkoY2FsbE5leHQsIHRoaXMpKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBDeWNsaW5nIGFjY29yZGluZyB0byBzcGVjaWZpZWQgZHVyYXRpb25cbiAgICAgICAgICAgIHRoaXMuX2N5Y2xlVGltZW91dCA9IHNldFRpbWVvdXQoJC5wcm94eShjYWxsTmV4dCwgdGhpcyksIGR1cmF0aW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAsIGRlc3Ryb3k6IGZ1bmN0aW9uIChwcmVzZXJ2ZUJhY2tncm91bmQpIHtcbiAgICAgICAgLy8gU3RvcCB0aGUgcmVzaXplIGV2ZW50c1xuICAgICAgICAkKHdpbmRvdykub2ZmKCdyZXNpemUuYmFja3N0cmV0Y2ggb3JpZW50YXRpb25jaGFuZ2UuYmFja3N0cmV0Y2gnKTtcblxuICAgICAgICAvLyBTdG9wIGFueSB2aWRlb3NcbiAgICAgICAgaWYgKHRoaXMudmlkZW9XcmFwcGVyKSB7XG4gICAgICAgICAgdGhpcy52aWRlb1dyYXBwZXIuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBDbGVhciB0aGUgdGltZW91dFxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fY3ljbGVUaW1lb3V0KTtcblxuICAgICAgICAvLyBSZW1vdmUgQmFja3N0cmV0Y2hcbiAgICAgICAgaWYoIXByZXNlcnZlQmFja2dyb3VuZCkge1xuICAgICAgICAgIHRoaXMuJHdyYXAucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4kY29udGFpbmVyLnJlbW92ZURhdGEoJ2JhY2tzdHJldGNoJyk7XG4gICAgICB9XG4gIH07XG4gICAgXG4gLyoqXG4gICogVmlkZW8gQWJzdHJhY3Rpb24gTGF5ZXJcbiAgKlxuICAqIFN0YXRpYyBtZXRob2RzOlxuICAqID4gVmlkZW9XcmFwcGVyLmxvYWRZb3V0dWJlQVBJKCkgLT4gQ2FsbCBpbiBvcmRlciB0byBsb2FkIHRoZSBZb3V0dWJlIEFQSS4gXG4gICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFuICd5b3V0dWJlX2FwaV9sb2FkJyBldmVudCB3aWxsIGJlIHRyaWdnZXJlZCBvbiAkKHdpbmRvdykgd2hlbiB0aGUgQVBJIGlzIGxvYWRlZC5cbiAgKlxuICAqIEdlbmVyaWM6XG4gICogPiBwbGF5ZXIudHlwZSAtPiB0eXBlIG9mIHRoZSB2aWRlb1xuICAqID4gcGxheWVyLnZpZGVvIC8gcGxheWVyLiR2aWRlbyAtPiBjb250YWlucyB0aGUgZWxlbWVudCBob2xkaW5nIHRoZSB2aWRlb1xuICAqID4gcGxheWVyLnBsYXkoKSAtPiBwbGF5cyB0aGUgdmlkZW9cbiAgKiA+IHBsYXllci5wYXVzZSgpIC0+IHBhdXNlcyB0aGUgdmlkZW9cbiAgKiA+IHBsYXllci5zZXRDdXJyZW50VGltZShwb3NpdGlvbikgLT4gc2Vla3MgdG8gYSBwb3NpdGlvbiBieSBzZWNvbmRzXG4gICogXG4gICogWW91dHViZTpcbiAgKiA+IHBsYXllci55dElkIHdpbGwgY29udGFpbiB0aGUgeW91dHViZSBJRCBpZiB0aGUgc291cmNlIGlzIGEgeW91dHViZSB1cmxcbiAgKiA+IHBsYXllci55dFJlYWR5IGlzIGEgZmxhZyB0ZWxsaW5nIHdoZXRoZXIgdGhlIHlvdXR1YmUgc291cmNlIGlzIHJlYWR5IGZvciBwbGF5YmFja1xuICAqICovXG5cbiAgdmFyIFZpZGVvV3JhcHBlciA9IGZ1bmN0aW9uICgpIHsgdGhpcy5pbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfEFycmF5PFN0cmluZz58QXJyYXk8e3tzcmM6IFN0cmluZywgdHlwZTogU3RyaW5nP319Pn0gb3B0aW9ucy51cmxcbiAgICogQHBhcmFtIHtCb29sZWFufSBvcHRpb25zLmxvb3A9ZmFsc2VcbiAgICogQHBhcmFtIHtCb29sZWFuP30gb3B0aW9ucy5tdXRlPXRydWVcbiAgICogQHBhcmFtIHtTdHJpbmc/fSBvcHRpb25zLnBvc3RlclxuICAgKiBsb29wLCBtdXRlLCBwb3N0ZXJcbiAgICovXG4gIFZpZGVvV3JhcHBlci5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgXG4gICAgdmFyICR2aWRlbztcblxuICAgIHZhciBzZXRWaWRlb0VsZW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGF0LiR2aWRlbyA9ICR2aWRlbztcbiAgICAgIHRoYXQudmlkZW8gPSAkdmlkZW9bMF07XG4gICAgfTtcbiAgICBcbiAgICAvLyBEZXRlcm1pbmUgdmlkZW8gdHlwZVxuICAgIFxuICAgIHZhciB2aWRlb1R5cGUgPSAndmlkZW8nO1xuICAgIFxuICAgIGlmICghKG9wdGlvbnMudXJsIGluc3RhbmNlb2YgQXJyYXkpICYmXG4gICAgICBZT1VUVUJFX1JFR0VYUC50ZXN0KG9wdGlvbnMudXJsKSkge1xuICAgICAgdmlkZW9UeXBlID0gJ3lvdXR1YmUnO1xuICAgIH1cbiAgICBcbiAgICB0aGF0LnR5cGUgPSB2aWRlb1R5cGU7XG5cbiAgICBpZiAodmlkZW9UeXBlID09PSAneW91dHViZScpIHtcblxuICAgICAgLy8gVHJ5IHRvIGxvYWQgdGhlIEFQSSBpbiB0aGUgbWVhbnRpbWVcbiAgICAgIFZpZGVvV3JhcHBlci5sb2FkWW91dHViZUFQSSgpO1xuXG4gICAgICB0aGF0Lnl0SWQgPSBvcHRpb25zLnVybC5tYXRjaChZT1VUVUJFX1JFR0VYUClbMl07XG4gICAgICB2YXIgc3JjID0gJ2h0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLycgKyB0aGF0Lnl0SWQgK1xuICAgICAgICAnP3JlbD0wJmF1dG9wbGF5PTAmc2hvd2luZm89MCZjb250cm9scz0wJm1vZGVzdGJyYW5kaW5nPTEnICtcbiAgICAgICAgJyZjY19sb2FkX3BvbGljeT0wJmRpc2FibGVrYj0xJml2X2xvYWRfcG9saWN5PTMmbG9vcD0wJyArXG4gICAgICAgICcmZW5hYmxlanNhcGk9MSZvcmlnaW49JyArIGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24ub3JpZ2luKTtcblxuICAgICAgdGhhdC5fX3l0U3RhcnRNdXRlZCA9ICEhb3B0aW9ucy5tdXRlIHx8IG9wdGlvbnMubXV0ZSA9PT0gdW5kZWZpbmVkO1xuXG4gICAgICAkdmlkZW8gPSAkKCc8aWZyYW1lIC8+JylcbiAgICAgICAgLmF0dHIoeyAnc3JjX3RvX2xvYWQnOiBzcmMgfSlcbiAgICAgICAgLmNzcyh7ICdib3JkZXInOiAwLCAnbWFyZ2luJzogMCwgJ3BhZGRpbmcnOiAwIH0pXG4gICAgICAgIC5kYXRhKCdwbGF5ZXInLCB0aGF0KTtcbiAgICAgICAgXG4gICAgICBpZiAob3B0aW9ucy5sb29wKSB7XG4gICAgICAgICR2aWRlby5vbignZW5kZWQubG9vcCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoIXRoYXQuX19tYW51YWxseVN0b3BwZWQpIHtcbiAgICAgICAgICAgdGhhdC5wbGF5KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdGhhdC55dFJlYWR5ID0gZmFsc2U7XG5cbiAgICAgIHNldFZpZGVvRWxlbWVudCgpO1xuXG4gICAgICBpZiAod2luZG93WydZVCddKSB7XG4gICAgICAgIHRoYXQuX2luaXRZb3V0dWJlKCk7XG4gICAgICAgICR2aWRlby50cmlnZ2VyKCdpbml0c3VjY2VzcycpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJCh3aW5kb3cpLm9uZSgneW91dHViZV9hcGlfbG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0aGF0Ll9pbml0WW91dHViZSgpO1xuICAgICAgICAgICR2aWRlby50cmlnZ2VyKCdpbml0c3VjY2VzcycpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIC8vIFRyYWRpdGlvbmFsIDx2aWRlbz4gdGFnIHdpdGggbXVsdGlwbGUgc291cmNlc1xuICAgICAgXG4gICAgICAkdmlkZW8gPSAkKCc8dmlkZW8+JylcbiAgICAgICAgLnByb3AoJ2F1dG9wbGF5JywgZmFsc2UpXG4gICAgICAgIC5wcm9wKCdjb250cm9scycsIGZhbHNlKVxuICAgICAgICAucHJvcCgnbG9vcCcsICEhb3B0aW9ucy5sb29wKVxuICAgICAgICAucHJvcCgnbXV0ZWQnLCAhIW9wdGlvbnMubXV0ZSB8fCBvcHRpb25zLm11dGUgPT09IHVuZGVmaW5lZClcbiAgICAgICAgXG4gICAgICAgIC8vIExldCB0aGUgZmlyc3QgZnJhbWVzIGJlIGF2YWlsYWJsZSBiZWZvcmUgcGxheWJhY2ssIGFzIHdlIGRvIHRyYW5zaXRpb25zXG4gICAgICAgIC5wcm9wKCdwcmVsb2FkJywgJ2F1dG8nKVxuICAgICAgICAucHJvcCgncG9zdGVyJywgb3B0aW9ucy5wb3N0ZXIgfHwgJycpO1xuICAgICAgICBcbiAgICAgIHZhciBzb3VyY2VzID0gKG9wdGlvbnMudXJsIGluc3RhbmNlb2YgQXJyYXkpID8gb3B0aW9ucy51cmwgOiBbb3B0aW9ucy51cmxdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvdXJjZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZUl0ZW0gPSBzb3VyY2VzW2ldO1xuICAgICAgICBpZiAodHlwZW9mKHNvdXJjZUl0ZW0pID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHNvdXJjZUl0ZW0gPSB7IHNyYzogc291cmNlSXRlbSB9O1xuICAgICAgICB9XG4gICAgICAgICQoJzxzb3VyY2U+JylcbiAgICAgICAgICAuYXR0cignc3JjJywgc291cmNlSXRlbS5zcmMpXG4gICAgICAgICAgLy8gTWFrZSBzdXJlIHRvIG5vdCBzcGVjaWZ5IHR5cGUgaWYgdW5rbm93biAtIFxuICAgICAgICAgIC8vICAgc28gdGhlIGJyb3dzZXIgd2lsbCB0cnkgdG8gYXV0b2RldGVjdC5cbiAgICAgICAgICAuYXR0cigndHlwZScsIHNvdXJjZUl0ZW0udHlwZSB8fCBudWxsKVxuICAgICAgICAgIC5hcHBlbmRUbygkdmlkZW8pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoISR2aWRlb1swXS5jYW5QbGF5VHlwZSB8fCAhc291cmNlcy5sZW5ndGgpIHtcbiAgICAgICAgJHZpZGVvLnRyaWdnZXIoJ2luaXRlcnJvcicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJHZpZGVvLnRyaWdnZXIoJ2luaXRzdWNjZXNzJyk7XG4gICAgICB9XG5cbiAgICAgIHNldFZpZGVvRWxlbWVudCgpO1xuICAgIH1cblxuICB9O1xuXG4gIFZpZGVvV3JhcHBlci5wcm90b3R5cGUuX2luaXRZb3V0dWJlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICBcbiAgICB2YXIgWVQgPSB3aW5kb3dbJ1lUJ107XG5cbiAgICB0aGF0LiR2aWRlb1xuICAgICAgLmF0dHIoJ3NyYycsIHRoYXQuJHZpZGVvLmF0dHIoJ3NyY190b19sb2FkJykpXG4gICAgICAucmVtb3ZlQXR0cignc3JjX3RvX2xvYWQnKTtcblxuICAgIC8vIEl0IHdvbid0IGluaXQgaWYgaXQncyBub3QgaW4gdGhlIERPTSwgc28gd2UgZW11bGF0ZSB0aGF0XG4gICAgdmFyIGhhc1BhcmVudCA9ICEhdGhhdC4kdmlkZW9bMF0ucGFyZW50Tm9kZTtcbiAgICBpZiAoIWhhc1BhcmVudCkge1xuICAgICAgdmFyICR0bXBQYXJlbnQgPSAkKCc8ZGl2PicpLmNzcygnZGlzcGxheScsICdub25lICFpbXBvcnRhbnQnKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KTtcbiAgICAgIHRoYXQuJHZpZGVvLmFwcGVuZFRvKCR0bXBQYXJlbnQpO1xuICAgIH1cblxuICAgIHZhciBwbGF5ZXIgPSBuZXcgWVQuUGxheWVyKHRoYXQudmlkZW8sIHtcbiAgICAgIGV2ZW50czoge1xuICAgICAgICAnb25SZWFkeSc6IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgIGlmICh0aGF0Ll9feXRTdGFydE11dGVkKSB7XG4gICAgICAgICAgICBwbGF5ZXIubXV0ZSgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghaGFzUGFyZW50KSB7XG4gICAgICAgICAgICAvLyBSZXN0b3JlIHBhcmVudCB0byBvbGQgc3RhdGUgLSB3aXRob3V0IGludGVycnVwdGluZyBhbnkgY2hhbmdlc1xuICAgICAgICAgICAgaWYgKHRoYXQuJHZpZGVvWzBdLnBhcmVudE5vZGUgPT09ICR0bXBQYXJlbnRbMF0pIHtcbiAgICAgICAgICAgICAgdGhhdC4kdmlkZW8uZGV0YWNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkdG1wUGFyZW50LnJlbW92ZSgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoYXQueXRSZWFkeSA9IHRydWU7XG4gICAgICAgICAgdGhhdC5fdXBkYXRlWW91dHViZVNpemUoKTtcbiAgICAgICAgICB0aGF0LiR2aWRlby50cmlnZ2VyKCdjYW5wbGF5Jyk7XG4gICAgICAgIH0sXG4gICAgICAgICdvblN0YXRlQ2hhbmdlJzogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgc3dpdGNoIChldmVudC5kYXRhKSB7XG4gICAgICAgICAgICBjYXNlIFlULlBsYXllclN0YXRlLlBMQVlJTkc6XG4gICAgICAgICAgICAgIHRoYXQuJHZpZGVvLnRyaWdnZXIoJ3BsYXlpbmcnKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFlULlBsYXllclN0YXRlLkVOREVEOlxuICAgICAgICAgICAgICB0aGF0LiR2aWRlby50cmlnZ2VyKCdlbmRlZCcpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgWVQuUGxheWVyU3RhdGUuUEFVU0VEOlxuICAgICAgICAgICAgICB0aGF0LiR2aWRlby50cmlnZ2VyKCdwYXVzZScpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgWVQuUGxheWVyU3RhdGUuQlVGRkVSSU5HOlxuICAgICAgICAgICAgICB0aGF0LiR2aWRlby50cmlnZ2VyKCd3YWl0aW5nJyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBZVC5QbGF5ZXJTdGF0ZS5DVUVEOlxuICAgICAgICAgICAgICB0aGF0LiR2aWRlby50cmlnZ2VyKCdjYW5wbGF5Jyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ29uUGxheWJhY2tRdWFsaXR5Q2hhbmdlJzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHRoYXQuX3VwZGF0ZVlvdXR1YmVTaXplKCk7XG4gICAgICAgICAgdGhhdC4kdmlkZW8udHJpZ2dlcigncmVzaXplJyk7XG4gICAgICAgIH0sXG4gICAgICAgICdvbkVycm9yJzogZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIHRoYXQuaGFzRXJyb3IgPSB0cnVlO1xuICAgICAgICAgIHRoYXQuJHZpZGVvLnRyaWdnZXIoeyAndHlwZSc6ICdlcnJvcicsICdlcnJvcic6IGVyciB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhhdC55dFBsYXllciA9IHBsYXllcjtcblxuICAgIHJldHVybiB0aGF0O1xuICB9OyAgICBcbiAgICBcbiAgVmlkZW9XcmFwcGVyLnByb3RvdHlwZS5fdXBkYXRlWW91dHViZVNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuXG4gICAgc3dpdGNoICh0aGF0Lnl0UGxheWVyLmdldFBsYXliYWNrUXVhbGl0eSgpIHx8ICdtZWRpdW0nKSB7XG4gICAgICBjYXNlICdzbWFsbCc6XG4gICAgICAgIHRoYXQudmlkZW8udmlkZW9XaWR0aCA9IDQyNjtcbiAgICAgICAgdGhhdC52aWRlby52aWRlb0hlaWdodCA9IDI0MDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgICB0aGF0LnZpZGVvLnZpZGVvV2lkdGggPSA2NDA7XG4gICAgICAgIHRoYXQudmlkZW8udmlkZW9IZWlnaHQgPSAzNjA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgIGNhc2UgJ2xhcmdlJzpcbiAgICAgICAgdGhhdC52aWRlby52aWRlb1dpZHRoID0gODU0O1xuICAgICAgICB0aGF0LnZpZGVvLnZpZGVvSGVpZ2h0ID0gNDgwO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2hkNzIwJzpcbiAgICAgICAgdGhhdC52aWRlby52aWRlb1dpZHRoID0gMTI4MDtcbiAgICAgICAgdGhhdC52aWRlby52aWRlb0hlaWdodCA9IDcyMDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdoZDEwODAnOlxuICAgICAgICB0aGF0LnZpZGVvLnZpZGVvV2lkdGggPSAxOTIwO1xuICAgICAgICB0aGF0LnZpZGVvLnZpZGVvSGVpZ2h0ID0gMTA4MDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdoaWdocmVzJzpcbiAgICAgICAgdGhhdC52aWRlby52aWRlb1dpZHRoID0gMjU2MDtcbiAgICAgICAgdGhhdC52aWRlby52aWRlb0hlaWdodCA9IDE0NDA7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiB0aGF0O1xuICB9O1xuXG4gIFZpZGVvV3JhcHBlci5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG5cbiAgICB0aGF0Ll9fbWFudWFsbHlTdG9wcGVkID0gZmFsc2U7XG4gICAgXG4gICAgaWYgKHRoYXQudHlwZSA9PT0gJ3lvdXR1YmUnKSB7XG4gICAgICBpZiAodGhhdC55dFJlYWR5KSB7XG4gICAgICAgIHRoYXQuJHZpZGVvLnRyaWdnZXIoJ3BsYXknKTtcbiAgICAgICAgdGhhdC55dFBsYXllci5wbGF5VmlkZW8oKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhhdC52aWRlby5wbGF5KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoYXQ7XG4gIH07XG5cbiAgVmlkZW9XcmFwcGVyLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG5cbiAgICB0aGF0Ll9fbWFudWFsbHlTdG9wcGVkID0gZmFsc2U7XG4gICAgXG4gICAgaWYgKHRoYXQudHlwZSA9PT0gJ3lvdXR1YmUnKSB7XG4gICAgICBpZiAodGhhdC55dFJlYWR5KSB7XG4gICAgICAgIHRoYXQueXRQbGF5ZXIucGF1c2VWaWRlbygpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGF0LnZpZGVvLnBhdXNlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoYXQ7XG4gIH07XG5cbiAgVmlkZW9XcmFwcGVyLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgIHRoYXQuX19tYW51YWxseVN0b3BwZWQgPSB0cnVlO1xuICAgIFxuICAgIGlmICh0aGF0LnR5cGUgPT09ICd5b3V0dWJlJykge1xuICAgICAgaWYgKHRoYXQueXRSZWFkeSkge1xuICAgICAgICB0aGF0Lnl0UGxheWVyLnBhdXNlVmlkZW8oKTtcbiAgICAgICAgdGhhdC55dFBsYXllci5zZWVrVG8oMCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoYXQudmlkZW8ucGF1c2UoKTtcbiAgICAgIHRoYXQudmlkZW8uY3VycmVudFRpbWUgPSAwO1xuICAgIH1cblxuICAgIHJldHVybiB0aGF0O1xuICB9O1xuXG4gIFZpZGVvV3JhcHBlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG5cbiAgICBpZiAodGhhdC55dFBsYXllcikge1xuICAgICAgdGhhdC55dFBsYXllci5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgdGhhdC4kdmlkZW8ucmVtb3ZlKCk7XG5cbiAgICByZXR1cm4gdGhhdDtcbiAgfTtcblxuICBWaWRlb1dyYXBwZXIucHJvdG90eXBlLmdldEN1cnJlbnRUaW1lID0gZnVuY3Rpb24gKHNlY29uZHMpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG5cbiAgICBpZiAodGhhdC50eXBlID09PSAneW91dHViZScpIHtcbiAgICAgIGlmICh0aGF0Lnl0UmVhZHkpIHtcbiAgICAgICAgcmV0dXJuIHRoYXQueXRQbGF5ZXIuZ2V0Q3VycmVudFRpbWUoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoYXQudmlkZW8uY3VycmVudFRpbWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIDA7XG4gIH07XG5cbiAgVmlkZW9XcmFwcGVyLnByb3RvdHlwZS5zZXRDdXJyZW50VGltZSA9IGZ1bmN0aW9uIChzZWNvbmRzKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuXG4gICAgaWYgKHRoYXQudHlwZSA9PT0gJ3lvdXR1YmUnKSB7XG4gICAgICBpZiAodGhhdC55dFJlYWR5KSB7XG4gICAgICAgIHRoYXQueXRQbGF5ZXIuc2Vla1RvKHNlY29uZHMsIHRydWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGF0LnZpZGVvLmN1cnJlbnRUaW1lID0gc2Vjb25kcztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhhdDtcbiAgfTtcblxuICBWaWRlb1dyYXBwZXIucHJvdG90eXBlLmdldER1cmF0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgIGlmICh0aGF0LnR5cGUgPT09ICd5b3V0dWJlJykge1xuICAgICAgaWYgKHRoYXQueXRSZWFkeSkge1xuICAgICAgICByZXR1cm4gdGhhdC55dFBsYXllci5nZXREdXJhdGlvbigpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhhdC52aWRlby5kdXJhdGlvbjtcbiAgICB9XG5cbiAgICByZXR1cm4gMDtcbiAgfTtcblxuICAvKipcbiAgICogVGhpcyB3aWxsIGxvYWQgdGhlIHlvdXR1YmUgQVBJIChpZiBub3QgbG9hZGVkIHlldClcbiAgICogVXNlICQod2luZG93KS5vbmUoJ3lvdXR1YmVfYXBpX2xvYWQnLCAuLi4pIHRvIGxpc3RlbiBmb3IgQVBJIGxvYWRlZCBldmVudFxuICAgKi9cbiAgVmlkZW9XcmFwcGVyLmxvYWRZb3V0dWJlQVBJID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh3aW5kb3dbJ1lUJ10pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCEkKCdzY3JpcHRbc3JjKj13d3dcXFxcLnlvdXR1YmVcXFxcLmNvbVxcXFwvaWZyYW1lX2FwaV0nKS5sZW5ndGgpIHtcbiAgICAgICQoJzxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2lmcmFtZV9hcGlcIj4nKS5hcHBlbmRUbygnYm9keScpO1xuICAgIH1cbiAgICB2YXIgeXRBUElMb2FkSW50ID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHdpbmRvd1snWVQnXSAmJiB3aW5kb3dbJ1lUJ10ubG9hZGVkKSB7XG4gICAgICAgICQod2luZG93KS50cmlnZ2VyKCd5b3V0dWJlX2FwaV9sb2FkJyk7XG4gICAgICAgIGNsZWFyVGltZW91dCh5dEFQSUxvYWRJbnQpO1xuICAgICAgfVxuICAgIH0sIDUwKTtcbiAgfTtcblxuICB2YXIgZ2V0RGV2aWNlT3JpZW50YXRpb24gPSBmdW5jdGlvbiAoKSB7XG5cbiAgICBpZiAoJ21hdGNoTWVkaWEnIGluIHdpbmRvdykge1xuICAgICAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhKFwiKG9yaWVudGF0aW9uOiBwb3J0cmFpdClcIikubWF0Y2hlcykge1xuICAgICAgICAgcmV0dXJuICdwb3J0cmFpdCc7XG4gICAgICB9IGVsc2UgaWYgKHdpbmRvdy5tYXRjaE1lZGlhKFwiKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpXCIpLm1hdGNoZXMpIHtcbiAgICAgICAgIHJldHVybiAnbGFuZHNjYXBlJztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc2NyZWVuLmhlaWdodCA+IHNjcmVlbi53aWR0aCkge1xuICAgICAgcmV0dXJuICdwb3J0cmFpdCc7XG4gICAgfVxuXG4gICAgLy8gRXZlbiBzcXVhcmUgZGV2aWNlcyBoYXZlIG9yaWVudGF0aW9uLFxuICAgIC8vICAgYnV0IGEgZGVza3RvcCBicm93c2VyIG1heSBiZSB0b28gb2xkIGZvciBgbWF0Y2hNZWRpYWAuXG4gICAgLy8gRGVmYXVsdGluZyB0byBgbGFuZHNjYXBlYCBmb3IgdGhlIFZFUlkgcmFyZSBjYXNlIG9mIGEgc3F1YXJlIGRlc2t0b3Agc2NyZWVuIGlzIGdvb2QgZW5vdWdoLlxuICAgIHJldHVybiAnbGFuZHNjYXBlJztcbiAgfTtcblxuICB2YXIgZ2V0V2luZG93T3JpZW50YXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHdpbmRvdy5pbm5lckhlaWdodCA+IHdpbmRvdy5pbm5lcldpZHRoKSB7XG4gICAgICByZXR1cm4gJ3BvcnRyYWl0JztcbiAgICB9XG4gICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID4gd2luZG93LmlubmVySGVpZ2h0KSB7XG4gICAgICByZXR1cm4gJ2xhbmRzY2FwZSc7XG4gICAgfVxuXG4gICAgcmV0dXJuICdzcXVhcmUnO1xuICB9O1xuXG4gIC8qIFNVUFBPUlRTIEZJWEVEIFBPU0lUSU9OP1xuICAgKlxuICAgKiBCYXNlZCBvbiBjb2RlIGZyb20galF1ZXJ5IE1vYmlsZSAxLjEuMFxuICAgKiBodHRwOi8vanF1ZXJ5bW9iaWxlLmNvbS9cbiAgICpcbiAgICogSW4gYSBudXRzaGVsbCwgd2UgbmVlZCB0byBmaWd1cmUgb3V0IGlmIGZpeGVkIHBvc2l0aW9uaW5nIGlzIHN1cHBvcnRlZC5cbiAgICogVW5mb3J0dW5hdGVseSwgdGhpcyBpcyB2ZXJ5IGRpZmZpY3VsdCB0byBkbyBvbiBpT1MsIGFuZCB1c3VhbGx5IGludm9sdmVzXG4gICAqIGluamVjdGluZyBjb250ZW50LCBzY3JvbGxpbmcgdGhlIHBhZ2UsIGV0Yy4uIEl0J3MgdWdseS5cbiAgICogalF1ZXJ5IE1vYmlsZSB1c2VzIHRoaXMgd29ya2Fyb3VuZC4gSXQncyBub3QgaWRlYWwsIGJ1dCB3b3Jrcy5cbiAgICpcbiAgICogTW9kaWZpZWQgdG8gZGV0ZWN0IElFNlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIHN1cHBvcnRzRml4ZWRQb3NpdGlvbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudFxuICAgICAgLCBwbGF0Zm9ybSA9IG5hdmlnYXRvci5wbGF0Zm9ybVxuICAgICAgICAvLyBSZW5kZXJpbmcgZW5naW5lIGlzIFdlYmtpdCwgYW5kIGNhcHR1cmUgbWFqb3IgdmVyc2lvblxuICAgICAgLCB3a21hdGNoID0gdWEubWF0Y2goIC9BcHBsZVdlYktpdFxcLyhbMC05XSspLyApXG4gICAgICAsIHdrdmVyc2lvbiA9ICEhd2ttYXRjaCAmJiB3a21hdGNoWyAxIF1cbiAgICAgICwgZmZtYXRjaCA9IHVhLm1hdGNoKCAvRmVubmVjXFwvKFswLTldKykvIClcbiAgICAgICwgZmZ2ZXJzaW9uID0gISFmZm1hdGNoICYmIGZmbWF0Y2hbIDEgXVxuICAgICAgLCBvcGVyYW1tb2JpbGVtYXRjaCA9IHVhLm1hdGNoKCAvT3BlcmEgTW9iaVxcLyhbMC05XSspLyApXG4gICAgICAsIG9tdmVyc2lvbiA9ICEhb3BlcmFtbW9iaWxlbWF0Y2ggJiYgb3BlcmFtbW9iaWxlbWF0Y2hbIDEgXVxuICAgICAgLCBpZW1hdGNoID0gdWEubWF0Y2goIC9NU0lFIChbMC05XSspLyApXG4gICAgICAsIGlldmVyc2lvbiA9ICEhaWVtYXRjaCAmJiBpZW1hdGNoWyAxIF07XG5cbiAgICByZXR1cm4gIShcbiAgICAgIC8vIGlPUyA0LjMgYW5kIG9sZGVyIDogUGxhdGZvcm0gaXMgaVBob25lL1BhZC9Ub3VjaCBhbmQgV2Via2l0IHZlcnNpb24gaXMgbGVzcyB0aGFuIDUzNCAoaW9zNSlcbiAgICAgICgocGxhdGZvcm0uaW5kZXhPZiggXCJpUGhvbmVcIiApID4gLTEgfHwgcGxhdGZvcm0uaW5kZXhPZiggXCJpUGFkXCIgKSA+IC0xICB8fCBwbGF0Zm9ybS5pbmRleE9mKCBcImlQb2RcIiApID4gLTEgKSAmJiB3a3ZlcnNpb24gJiYgd2t2ZXJzaW9uIDwgNTM0KSB8fFxuXG4gICAgICAvLyBPcGVyYSBNaW5pXG4gICAgICAod2luZG93Lm9wZXJhbWluaSAmJiAoe30pLnRvU3RyaW5nLmNhbGwoIHdpbmRvdy5vcGVyYW1pbmkgKSA9PT0gXCJbb2JqZWN0IE9wZXJhTWluaV1cIikgfHxcbiAgICAgIChvcGVyYW1tb2JpbGVtYXRjaCAmJiBvbXZlcnNpb24gPCA3NDU4KSB8fFxuXG4gICAgICAvL0FuZHJvaWQgbHRlIDIuMTogUGxhdGZvcm0gaXMgQW5kcm9pZCBhbmQgV2Via2l0IHZlcnNpb24gaXMgbGVzcyB0aGFuIDUzMyAoQW5kcm9pZCAyLjIpXG4gICAgICAodWEuaW5kZXhPZiggXCJBbmRyb2lkXCIgKSA+IC0xICYmIHdrdmVyc2lvbiAmJiB3a3ZlcnNpb24gPCA1MzMpIHx8XG5cbiAgICAgIC8vIEZpcmVmb3ggTW9iaWxlIGJlZm9yZSA2LjAgLVxuICAgICAgKGZmdmVyc2lvbiAmJiBmZnZlcnNpb24gPCA2KSB8fFxuXG4gICAgICAvLyBXZWJPUyBsZXNzIHRoYW4gM1xuICAgICAgKFwicGFsbUdldFJlc291cmNlXCIgaW4gd2luZG93ICYmIHdrdmVyc2lvbiAmJiB3a3ZlcnNpb24gPCA1MzQpIHx8XG5cbiAgICAgIC8vIE1lZUdvXG4gICAgICAodWEuaW5kZXhPZiggXCJNZWVHb1wiICkgPiAtMSAmJiB1YS5pbmRleE9mKCBcIk5va2lhQnJvd3Nlci84LjUuMFwiICkgPiAtMSkgfHxcblxuICAgICAgLy8gSUU2XG4gICAgICAoaWV2ZXJzaW9uICYmIGlldmVyc2lvbiA8PSA2KVxuICAgICk7XG4gIH0oKSk7XG5cbn0oalF1ZXJ5LCB3aW5kb3cpKTtcbiJdfQ==
